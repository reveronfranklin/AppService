using System;
using System.Collections.Generic;
using AppService.Core.EntitiesEstadisticas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace AppService.Infrastructure.DataEstadisticas

{
    public partial class EstadisticasContext : DbContext
    {
        public EstadisticasContext()
        {
        }

        public EstadisticasContext(DbContextOptions<EstadisticasContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AcumuladoAnualCliente> AcumuladoAnualClientes { get; set; }
        public virtual DbSet<AcumuladoAnualClientes2> AcumuladoAnualClientes2s { get; set; }
        public virtual DbSet<CalculoMcAgrupadoProducto> CalculoMcAgrupadoProductos { get; set; }
        public virtual DbSet<CifrasEmbarque> CifrasEmbarques { get; set; }
        public virtual DbSet<CifrasEmbarquesAnoMe> CifrasEmbarquesAnoMes { get; set; }
        public virtual DbSet<CifrasEmbarquesAnoMes1> CifrasEmbarquesAnoMes1s { get; set; }
        public virtual DbSet<CifrasEmbarquesAnoMesCpo> CifrasEmbarquesAnoMesCpos { get; set; }
        public virtual DbSet<CifrasEmbarquesAnoMesImp> CifrasEmbarquesAnoMesImps { get; set; }
        public virtual DbSet<CifrasEmbarquesAnoMesOut> CifrasEmbarquesAnoMesOuts { get; set; }
        public virtual DbSet<CifrasEmbarquesAnoMesSum> CifrasEmbarquesAnoMesSums { get; set; }
        public virtual DbSet<CifrasEmbarquesTitulo> CifrasEmbarquesTitulos { get; set; }
        public virtual DbSet<CifrasEmbarquesTitulosGenpa> CifrasEmbarquesTitulosGenpas { get; set; }
        public virtual DbSet<Ciny035> Ciny035s { get; set; }
        public virtual DbSet<Ciny037> Ciny037s { get; set; }
        public virtual DbSet<Cliente2000> Cliente2000s { get; set; }
        public virtual DbSet<Cliente2001> Cliente2001s { get; set; }
        public virtual DbSet<Cliente2002> Cliente2002s { get; set; }
        public virtual DbSet<Cliente2003> Cliente2003s { get; set; }
        public virtual DbSet<Cliente2004> Cliente2004s { get; set; }
        public virtual DbSet<ClienteSaldo> ClienteSaldos { get; set; }
        public virtual DbSet<ClientesTop25EmbarquePorAño> ClientesTop25EmbarquePorAños { get; set; }
        public virtual DbSet<Control> Controls { get; set; }
        public virtual DbSet<Cpry106> Cpry106s { get; set; }
        public virtual DbSet<Cpry108> Cpry108s { get; set; }
        public virtual DbSet<Cpry113> Cpry113s { get; set; }
        public virtual DbSet<Cpry216> Cpry216s { get; set; }
        public virtual DbSet<Csmy003> Csmy003s { get; set; }
        public virtual DbSet<Csmy005> Csmy005s { get; set; }
        public virtual DbSet<Csmy021> Csmy021s { get; set; }
        public virtual DbSet<Csmy036> Csmy036s { get; set; }
        public virtual DbSet<Csmy074> Csmy074s { get; set; }
        public virtual DbSet<Csmy075> Csmy075s { get; set; }
        public virtual DbSet<Csmy1761> Csmy1761s { get; set; }
        public virtual DbSet<CuotaVentasGrupo> CuotaVentasGrupos { get; set; }
        public virtual DbSet<CuotasCobranza> CuotasCobranzas { get; set; }
        public virtual DbSet<CuotasVenta> CuotasVentas { get; set; }
        public virtual DbSet<DescProdCventa> DescProdCventas { get; set; }
        public virtual DbSet<Deslin> Deslins { get; set; }
        public virtual DbSet<Dias09> Dias09s { get; set; }
        public virtual DbSet<Diascalle> Diascalles { get; set; }
        public virtual DbSet<DwCsmy005> DwCsmy005s { get; set; }
        public virtual DbSet<Dwtinta> Dwtintas { get; set; }
        public virtual DbSet<Ecepcioncostocliente> Ecepcioncostoclientes { get; set; }
        public virtual DbSet<Embarque> Embarques { get; set; }
        public virtual DbSet<EmbarquesPorMunicipio> EmbarquesPorMunicipios { get; set; }
        public virtual DbSet<Encuesta01> Encuesta01s { get; set; }
        public virtual DbSet<Encuesta01bk> Encuesta01bks { get; set; }
        public virtual DbSet<Encuesta02> Encuesta02s { get; set; }
        public virtual DbSet<Escenario> Escenarios { get; set; }
        public virtual DbSet<Especiale> Especiales { get; set; }
        public virtual DbSet<EstadisticasOficina> EstadisticasOficinas { get; set; }
        public virtual DbSet<EstadisticasRegion> EstadisticasRegions { get; set; }
        public virtual DbSet<EstadisticasWeb1> EstadisticasWeb1s { get; set; }
        public virtual DbSet<EstadisticasWeb2> EstadisticasWeb2s { get; set; }
        public virtual DbSet<EstadisticasWeb3> EstadisticasWeb3s { get; set; }
        public virtual DbSet<EstadisticasWeb4> EstadisticasWeb4s { get; set; }
        public virtual DbSet<EstadisticasWebOfic> EstadisticasWebOfics { get; set; }
        public virtual DbSet<EstadisticasWebSup> EstadisticasWebSups { get; set; }
        public virtual DbSet<EstadisticasWebVendedor> EstadisticasWebVendedors { get; set; }
        public virtual DbSet<EstadisticoCobranzas01> EstadisticoCobranzas01s { get; set; }
        public virtual DbSet<Factura> Facturas { get; set; }
        public virtual DbSet<Facturasc> Facturascs { get; set; }
        public virtual DbSet<Facturasm> Facturasms { get; set; }
        public virtual DbSet<FacturasxClientes01> FacturasxClientes01s { get; set; }
        public virtual DbSet<Fm> Fms { get; set; }
        public virtual DbSet<Fm1> Fm1s { get; set; }
        public virtual DbSet<FmXProducto> FmXProductos { get; set; }
        public virtual DbSet<Gerente> Gerentes { get; set; }
        public virtual DbSet<Guiahist> Guiahists { get; set; }
        public virtual DbSet<HistoricoAcumVenta> HistoricoAcumVentas { get; set; }
        public virtual DbSet<HistoricoAcumVentasVendedor> HistoricoAcumVentasVendedors { get; set; }
        public virtual DbSet<HistoricoIngresosVendedor> HistoricoIngresosVendedors { get; set; }
        public virtual DbSet<Impstock> Impstocks { get; set; }
        public virtual DbSet<IngresosPorVendedor> IngresosPorVendedors { get; set; }
        public virtual DbSet<MargenPorVendedor> MargenPorVendedors { get; set; }
        public virtual DbSet<Mc> Mcs { get; set; }
        public virtual DbSet<McAgrupadoProductoOrdenado> McAgrupadoProductoOrdenados { get; set; }
        public virtual DbSet<Mcemb> Mcembs { get; set; }
        public virtual DbSet<Mcembm> Mcembms { get; set; }
        public virtual DbSet<Mcembmcuadre> Mcembmcuadres { get; set; }
        public virtual DbSet<Mcembplu> Mcembplus { get; set; }
        public virtual DbSet<Mcembrangotitulo> Mcembrangotitulos { get; set; }
        public virtual DbSet<Mcorionm> Mcorionms { get; set; }
        public virtual DbSet<Mcprom> Mcproms { get; set; }
        public virtual DbSet<Mcvtam> Mcvtams { get; set; }
        public virtual DbSet<Mcvtasincomision> Mcvtasincomisions { get; set; }
        public virtual DbSet<Mcvtum> Mcvta { get; set; }
        public virtual DbSet<Nccne> Nccnes { get; set; }
        public virtual DbSet<NominaVendedor> NominaVendedors { get; set; }
        public virtual DbSet<OficinasWeb> OficinasWebs { get; set; }
        public virtual DbSet<OrdenEmbarquesVentasCobro> OrdenEmbarquesVentasCobros { get; set; }
        public virtual DbSet<OrdenVentasEmbarquesCobro> OrdenVentasEmbarquesCobros { get; set; }
        public virtual DbSet<OrdenesAnulada> OrdenesAnuladas { get; set; }
        public virtual DbSet<OrdenesEnero2017> OrdenesEnero2017s { get; set; }
        public virtual DbSet<OrdenesIcpp2016> OrdenesIcpp2016s { get; set; }
        public virtual DbSet<Ordenesespeciale> Ordenesespeciales { get; set; }
        public virtual DbSet<Ordenreporte> Ordenreportes { get; set; }
        public virtual DbSet<OtroMat> OtroMats { get; set; }
        public virtual DbSet<Preciopapelorden> Preciopapelordens { get; set; }
        public virtual DbSet<QueryCuotasxventa> QueryCuotasxventas { get; set; }
        public virtual DbSet<QueryCuotasxventasm> QueryCuotasxventasms { get; set; }
        public virtual DbSet<QueryEstadist01> QueryEstadist01s { get; set; }
        public virtual DbSet<QueryEstadistPe01> QueryEstadistPe01s { get; set; }
        public virtual DbSet<QueryEstadistxasig01> QueryEstadistxasig01s { get; set; }
        public virtual DbSet<QueryHistoricoAcumVentasAp> QueryHistoricoAcumVentasAps { get; set; }
        public virtual DbSet<QueryNominaVentas01> QueryNominaVentas01s { get; set; }
        public virtual DbSet<QueryPostventa01> QueryPostventa01s { get; set; }
        public virtual DbSet<QueryPostventa02> QueryPostventa02s { get; set; }
        public virtual DbSet<QueryPostventa03> QueryPostventa03s { get; set; }
        public virtual DbSet<QueryRelaclienteFact01> QueryRelaclienteFact01s { get; set; }
        public virtual DbSet<QueryTotalMcTp> QueryTotalMcTps { get; set; }
        public virtual DbSet<QueryVentasPrep> QueryVentasPreps { get; set; }
        public virtual DbSet<Rangomccium> Rangomccia { get; set; }
        public virtual DbSet<Rangoresma> Rangoresmas { get; set; }
        public virtual DbSet<Rangotitulo> Rangotitulos { get; set; }
        public virtual DbSet<Rateplaca> Rateplacas { get; set; }
        public virtual DbSet<Regione> Regiones { get; set; }
        public virtual DbSet<Relaclientefact> Relaclientefacts { get; set; }
        public virtual DbSet<Reodene> Reodenes { get; set; }
        public virtual DbSet<Result> Results { get; set; }
        public virtual DbSet<ResumenDeVentasDelMe> ResumenDeVentasDelMes { get; set; }
        public virtual DbSet<StatusOrdenWebSup> StatusOrdenWebSups { get; set; }
        public virtual DbSet<StatusOrdenesI> StatusOrdeneses { get; set; }
        public virtual DbSet<StatusOrdenesImpreso> StatusOrdenesImpresos { get; set; }
        public virtual DbSet<StatusOrdenesStock> StatusOrdenesStocks { get; set; }
        public virtual DbSet<SupervisorXMe> SupervisorXMes { get; set; }
        public virtual DbSet<Supervisore> Supervisores { get; set; }
        public virtual DbSet<SupervisoresEstadistico01> SupervisoresEstadistico01s { get; set; }
        public virtual DbSet<TemporalLc> TemporalLcs { get; set; }
        public virtual DbSet<TipoProducto> TipoProductos { get; set; }
        public virtual DbSet<TituloVenta> TituloVentas { get; set; }
        public virtual DbSet<TotalCuotasGrupo> TotalCuotasGrupos { get; set; }
        public virtual DbSet<TotalOficina> TotalOficinas { get; set; }
        public virtual DbSet<TotalOrdenesPorProducto> TotalOrdenesPorProductos { get; set; }
        public virtual DbSet<TotalOrdenesPorProducto1> TotalOrdenesPorProducto1s { get; set; }
        public virtual DbSet<TotalOrdenesPorProducto2> TotalOrdenesPorProducto2s { get; set; }
        public virtual DbSet<TotalRegion> TotalRegions { get; set; }
        public virtual DbSet<TotalSup> TotalSups { get; set; }
        public virtual DbSet<TotalVariacionAp> TotalVariacionAps { get; set; }
        public virtual DbSet<TotalVariacionMpGrupo> TotalVariacionMpGrupos { get; set; }
        public virtual DbSet<TotalVariacionP> TotalVariacionPs { get; set; }
        public virtual DbSet<TotalVend> TotalVends { get; set; }
        public virtual DbSet<TotalVendedorProducto> TotalVendedorProductos { get; set; }
        public virtual DbSet<TotalVendedorProductoFm> TotalVendedorProductoFms { get; set; }
        public virtual DbSet<TotalVentasAcumAno> TotalVentasAcumAnos { get; set; }
        public virtual DbSet<VAñoTituloTituloVenta> VAñoTituloTituloVentas { get; set; }
        public virtual DbSet<VAñomesoficina> VAñomesoficinas { get; set; }
        public virtual DbSet<VAñomesregion> VAñomesregions { get; set; }
        public virtual DbSet<VAñomesregion4> VAñomesregion4s { get; set; }
        public virtual DbSet<VAñomesregion4bk> VAñomesregion4bks { get; set; }
        public virtual DbSet<VAñomesregion4ventum> VAñomesregion4venta { get; set; }
        public virtual DbSet<VAñomesregionventum> VAñomesregionventa { get; set; }
        public virtual DbSet<VAñomestipo> VAñomestipos { get; set; }
        public virtual DbSet<VAñomestipolinea> VAñomestipolineas { get; set; }
        public virtual DbSet<VAñomestipolineafamiliaventum> VAñomestipolineafamiliaventa { get; set; }
        public virtual DbSet<VAñomestipolineafamilium> VAñomestipolineafamilia { get; set; }
        public virtual DbSet<VAñomestipolineaventum> VAñomestipolineaventa { get; set; }
        public virtual DbSet<VAñomestipoventum> VAñomestipoventa { get; set; }
        public virtual DbSet<VAñomesup> VAñomesups { get; set; }
        public virtual DbSet<VAñotipolinea> VAñotipolineas { get; set; }
        public virtual DbSet<VBacklog> VBacklogs { get; set; }
        public virtual DbSet<VBonomcdetalle> VBonomcdetalles { get; set; }
        public virtual DbSet<VBonomcdetalle01> VBonomcdetalle01s { get; set; }
        public virtual DbSet<VBonomcporvendedorañome> VBonomcporvendedorañomes { get; set; }
        public virtual DbSet<VCantidadOrdene> VCantidadOrdenes { get; set; }
        public virtual DbSet<VDiccionarioestadistica> VDiccionarioestadisticas { get; set; }
        public virtual DbSet<VInvetarioReconversion> VInvetarioReconversions { get; set; }
        public virtual DbSet<VMcEmb> VMcEmbs { get; set; }
        public virtual DbSet<VMcEmbarquesPorRangoHerbert> VMcEmbarquesPorRangoHerberts { get; set; }
        public virtual DbSet<VMcMixPorProducto> VMcMixPorProductos { get; set; }
        public virtual DbSet<VMcemb1> VMcembs1 { get; set; }
        public virtual DbSet<VMcembGlobal> VMcembGlobals { get; set; }
        public virtual DbSet<VMcembSincomision> VMcembSincomisions { get; set; }
        public virtual DbSet<VOrdenesenestadisticosinfacturar> VOrdenesenestadisticosinfacturars { get; set; }
        public virtual DbSet<VOrdenesespeciale> VOrdenesespeciales { get; set; }
        public virtual DbSet<VRangomargenembarque> VRangomargenembarques { get; set; }
        public virtual DbSet<VRangomargenembarquestitulo> VRangomargenembarquestitulos { get; set; }
        public virtual DbSet<VRangomargenventa> VRangomargenventas { get; set; }
        public virtual DbSet<VTotalAñoMesProd> VTotalAñoMesProds { get; set; }
        public virtual DbSet<VTotalAñoMesTituloTituloVenta> VTotalAñoMesTituloTituloVentas { get; set; }
        public virtual DbSet<VTotaltipoformula> VTotaltipoformulas { get; set; }
        public virtual DbSet<VVenta> VVentas { get; set; }
        public virtual DbSet<VVentasAñoMesVendedorCategoriaSubcategorium> VVentasAñoMesVendedorCategoriaSubcategoria { get; set; }
        public virtual DbSet<VVentasMe> VVentasMes { get; set; }
        public virtual DbSet<VVentasOrdenesespeciale> VVentasOrdenesespeciales { get; set; }
        public virtual DbSet<VVentasProductoMayor> VVentasProductoMayors { get; set; }
        public virtual DbSet<Valija> Valijas { get; set; }
        public virtual DbSet<VariacionMpGrupo> VariacionMpGrupos { get; set; }
        public virtual DbSet<VendedorOficina> VendedorOficinas { get; set; }
        public virtual DbSet<VendedorProducto> VendedorProductos { get; set; }
        public virtual DbSet<VendedorProductoPartesPapel> VendedorProductoPartesPapels { get; set; }
        public virtual DbSet<VendedorVentasProductoMa> VendedorVentasProductoMas { get; set; }
        public virtual DbSet<VendedorVentasProductoMp> VendedorVentasProductoMps { get; set; }
        public virtual DbSet<VendedoresActivo> VendedoresActivos { get; set; }
        public virtual DbSet<VendedoresEstadistico01> VendedoresEstadistico01s { get; set; }
        public virtual DbSet<VendedoresXMe> VendedoresXMes { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
        public virtual DbSet<Ventas1> Ventas1s { get; set; }
        public virtual DbSet<VentasA> VentasAs { get; set; }
        public virtual DbSet<VentasAnoActual> VentasAnoActuals { get; set; }
        public virtual DbSet<VentasHistoricoAcumGrupoAp> VentasHistoricoAcumGrupoAps { get; set; }
        public virtual DbSet<VentasHistoricoAcumulado> VentasHistoricoAcumulados { get; set; }
        public virtual DbSet<VentasMesPrevio> VentasMesPrevios { get; set; }
        public virtual DbSet<VentasPorRegion> VentasPorRegions { get; set; }
        public virtual DbSet<VentasProductoRep> VentasProductoReps { get; set; }
        public virtual DbSet<Ventasa1> Ventasas1 { get; set; }
        public virtual DbSet<Ventasconordenes2000> Ventasconordenes2000s { get; set; }
        public virtual DbSet<Ventasf> Ventasfs { get; set; }
        public virtual DbSet<Ventasin> Ventasins { get; set; }
        public virtual DbSet<Ventasm> Ventasms { get; set; }
        public virtual DbSet<Ventasm012023> Ventasm012023s { get; set; }
        public virtual DbSet<Ventasm02022022> Ventasm02022022s { get; set; }
        public virtual DbSet<Ventasm02122021> Ventasm02122021s { get; set; }
        public virtual DbSet<Ventasm08012022> Ventasm08012022s { get; set; }
        public virtual DbSet<Ventasm12012022> Ventasm12012022s { get; set; }
        public virtual DbSet<VentasmRezagada> VentasmRezagadas { get; set; }
        public virtual DbSet<Ventasmal01112022> Ventasmal01112022s { get; set; }
        public virtual DbSet<Ventasmal10032022> Ventasmal10032022s { get; set; }
        public virtual DbSet<Ventasmal12012022> Ventasmal12012022s { get; set; }
        public virtual DbSet<Ventasmcopium> Ventasmcopia { get; set; }
        public virtual DbSet<Ventasmodifcacionnombre> Ventasmodifcacionnombres { get; set; }
        public virtual DbSet<Ventasporproducto> Ventasporproductos { get; set; }
        public virtual DbSet<VerReordene> VerReordenes { get; set; }
        public virtual DbSet<VerReordenesView> VerReordenesViews { get; set; }
        public virtual DbSet<View1> View1s { get; set; }
        public virtual DbSet<Winy030> Winy030s { get; set; }
        public virtual DbSet<Wmcs001> Wmcs001s { get; set; }
        public virtual DbSet<Wpry062> Wpry062s { get; set; }
        public virtual DbSet<Wpry090> Wpry090s { get; set; }
        public virtual DbSet<Wsmy021> Wsmy021s { get; set; }
        public virtual DbSet<Wsmy123> Wsmy123s { get; set; }
        public virtual DbSet<Wssy030> Wssy030s { get; set; }

        /*protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Server=172.28.107.19\\FSVEMCYN03D;Database=Estadisticas;User Id=userweb;Password=userweb2003;MultipleActiveResultSets=true");
            }
        }*/

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("Modern_Spanish_CI_AS");

            modelBuilder.Entity<AcumuladoAnualCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Acumulado_Anual_Clientes");

                entity.Property(e => e.Asignacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Codigo).HasColumnName("CODIGO");

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Codigo_Region")
                    .IsFixedLength();

                entity.Property(e => e.Direccion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Lista2000)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2000");

                entity.Property(e => e.Lista2001)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2001");

                entity.Property(e => e.Lista2002)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2002");

                entity.Property(e => e.Lista2003)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2003");

                entity.Property(e => e.Lista2004)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2004");

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Nom_Vendedor")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Vendedor1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Venta2000)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2000");

                entity.Property(e => e.Venta2001)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2001");

                entity.Property(e => e.Venta2002)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2002");

                entity.Property(e => e.Venta2003)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2003");

                entity.Property(e => e.Venta2004)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2004");
            });

            modelBuilder.Entity<AcumuladoAnualClientes2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Acumulado_Anual_Clientes_2");

                entity.Property(e => e.Asignacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Codigo).HasColumnName("CODIGO");

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Codigo_Region")
                    .IsFixedLength();

                entity.Property(e => e.Direccion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Lista2000)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2000");

                entity.Property(e => e.Lista2001)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2001");

                entity.Property(e => e.Lista2002)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2002");

                entity.Property(e => e.Lista2003)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2003");

                entity.Property(e => e.Lista2004)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2004");

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Nom_Vendedor")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Saldo).HasColumnType("decimal(38, 2)");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Vendedor1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Venta2000)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2000");

                entity.Property(e => e.Venta2001)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2001");

                entity.Property(e => e.Venta2002)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2002");

                entity.Property(e => e.Venta2003)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2003");

                entity.Property(e => e.Venta2004)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2004");
            });

            modelBuilder.Entity<CalculoMcAgrupadoProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Calculo_Mc_Agrupado_Producto");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Mc1)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("mc1");

                entity.Property(e => e.Mclista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MClista");

                entity.Property(e => e.Mcventa)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MCventa");

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.Parte).HasColumnName("PARTE");

                entity.Property(e => e.SumLista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("Sum_LISTA");

                entity.Property(e => e.SumMc)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("sum_Mc");

                entity.Property(e => e.SumVenta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("Sum_venta");
            });

            modelBuilder.Entity<CifrasEmbarque>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CIFRAS  EMBARQUES");

                entity.Property(e => e.Campo).HasColumnName("CAMPO");

                entity.Property(e => e.FechaDesde)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DESDE");

                entity.Property(e => e.FechaHasta)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_HASTA");

                entity.Property(e => e.Hora)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("HORA");

                entity.Property(e => e.Lista).HasColumnName("LISTA");

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(28, 7)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ListaReal).HasColumnName("LISTA_REAL");

                entity.Property(e => e.SumaResta)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUMA_RESTA");

                entity.Property(e => e.TasaDolar)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("TASA_DOLAR");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.Venta).HasColumnName("VENTA");

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(28, 7)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaReal).HasColumnName("VENTA_REAL");
            });

            modelBuilder.Entity<CifrasEmbarquesAnoMe>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cifras_embarques_ano_mes");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.BsmcCpo)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_CPO");

                entity.Property(e => e.BsmcImp)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_IMP");

                entity.Property(e => e.BsmcJob)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_JOB");

                entity.Property(e => e.BsmcOut)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_OUT");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.ValorListaCpo)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_LISTA_CPO");

                entity.Property(e => e.ValorListaImp)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_LISTA_IMP");

                entity.Property(e => e.ValorListaJob)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_LISTA_JOB");

                entity.Property(e => e.ValorListaOut)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_LISTA_OUT");

                entity.Property(e => e.ValorVentaCpo)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_VENTA_CPO");

                entity.Property(e => e.ValorVentaImp)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_VENTA_IMP");

                entity.Property(e => e.ValorVentaJob)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_VENTA_JOB");

                entity.Property(e => e.ValorVentaOut)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_VENTA_OUT");
            });

            modelBuilder.Entity<CifrasEmbarquesAnoMes1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cifras_embarques_ano_mes1");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<CifrasEmbarquesAnoMesCpo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cifras_embarques_ano_mes_CPO");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.BsmcCpo)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_CPO");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.ValorListaCpo)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_LISTA_CPO");

                entity.Property(e => e.ValorVentaCpo)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_VENTA_CPO");
            });

            modelBuilder.Entity<CifrasEmbarquesAnoMesImp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cifras_embarques_ano_mes_IMP");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.BsmcImp)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_IMP");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.ValorListaImp)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_LISTA_IMP");

                entity.Property(e => e.ValorVentaImp)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_VENTA_IMP");
            });

            modelBuilder.Entity<CifrasEmbarquesAnoMesOut>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cifras_embarques_ano_mes_OUT");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.BsmcOut)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_OUT");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.ValorListaOut)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_LISTA_OUT");

                entity.Property(e => e.ValorVentaOut)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_VENTA_OUT");
            });

            modelBuilder.Entity<CifrasEmbarquesAnoMesSum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cifras_embarques_ano_mes_SUM");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.BsmcJob)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_JOB");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.ValorListaJob)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_LISTA_JOB");

                entity.Property(e => e.ValorVentaJob)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_VENTA_JOB");
            });

            modelBuilder.Entity<CifrasEmbarquesTitulo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CIFRAS EMBARQUES TITULOS");

                entity.Property(e => e.Campo).HasColumnName("CAMPO");

                entity.Property(e => e.FechaDesde)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_DESDE");

                entity.Property(e => e.FechaHasta)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_HASTA");

                entity.Property(e => e.Hora)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("HORA");

                entity.Property(e => e.Lista).HasColumnName("LISTA");

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(28, 7)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ListaReal).HasColumnName("LISTA_REAL");

                entity.Property(e => e.SumaResta)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUMA_RESTA");

                entity.Property(e => e.TasaDolar)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("TASA_DOLAR");

                entity.Property(e => e.TipoProducto)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.Venta).HasColumnName("VENTA");

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(28, 7)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaReal).HasColumnName("VENTA_REAL");
            });

            modelBuilder.Entity<CifrasEmbarquesTitulosGenpa>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CIFRAS_EMBARQUES_TITULOS_GENPA");

                entity.Property(e => e.Campo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CAMPO");

                entity.Property(e => e.FechaDesde)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_DESDE");

                entity.Property(e => e.FechaHasta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_HASTA")
                    .IsFixedLength();

                entity.Property(e => e.Hora)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("HORA")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(28, 7)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ListaReal)
                    .HasColumnType("decimal(21, 0)")
                    .HasColumnName("LISTA_REAL");

                entity.Property(e => e.SumaResta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUMA_RESTA")
                    .IsFixedLength();

                entity.Property(e => e.TasaDolar)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("TASA_DOLAR");

                entity.Property(e => e.TipoProducto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("VENTA");

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(20, 7)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaReal)
                    .HasColumnType("decimal(13, 0)")
                    .HasColumnName("VENTA_REAL");
            });

            modelBuilder.Entity<Ciny035>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CINY035");

                entity.Property(e => e.Campo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CAMPO");

                entity.Property(e => e.FechaDesde)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_DESDE");

                entity.Property(e => e.FechaHasta)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_HASTA");

                entity.Property(e => e.Hora)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("HORA")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RtasaDolar)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RTASA_DOLAR");

                entity.Property(e => e.SumaResta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUMA_RESTA")
                    .IsFixedLength();

                entity.Property(e => e.TasaDolar)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("TASA_DOLAR");

                entity.Property(e => e.TipoProducto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<Ciny037>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CINY037");

                entity.Property(e => e.Campo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CAMPO");

                entity.Property(e => e.FechaDesde)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_DESDE");

                entity.Property(e => e.FechaHasta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_HASTA")
                    .IsFixedLength();

                entity.Property(e => e.Hora)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("HORA")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.SumaResta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUMA_RESTA")
                    .IsFixedLength();

                entity.Property(e => e.TasaDolar)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("TASA_DOLAR");

                entity.Property(e => e.TipoProducto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<Cliente2000>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cliente_2000");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Lista2000)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2000");

                entity.Property(e => e.Venta2000)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2000");
            });

            modelBuilder.Entity<Cliente2001>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cliente_2001");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Lista2001)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2001");

                entity.Property(e => e.Venta2001)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2001");
            });

            modelBuilder.Entity<Cliente2002>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cliente_2002");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Lista2002)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2002");

                entity.Property(e => e.Venta2002)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2002");
            });

            modelBuilder.Entity<Cliente2003>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cliente_2003");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Lista2003)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2003");

                entity.Property(e => e.Venta2003)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2003");
            });

            modelBuilder.Entity<Cliente2004>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cliente_2004");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Lista2004)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Lista_2004");

                entity.Property(e => e.Venta2004)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("Venta_2004");
            });

            modelBuilder.Entity<ClienteSaldo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cliente_Saldo");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Saldo).HasColumnType("decimal(38, 2)");
            });

            modelBuilder.Entity<ClientesTop25EmbarquePorAño>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ClientesTop25EmbarquePorAño");

                entity.Property(e => e.Año).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Cliente).HasColumnType("numeric(18, 0)");
            });

            modelBuilder.Entity<Control>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTROL");

                entity.Property(e => e.AloActual)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_ACTUAL");

                entity.Property(e => e.AloControlMarketing).HasColumnName("ALO_CONTROL_MARKETING");

                entity.Property(e => e.Añopronostico).HasColumnName("AÑOPRONOSTICO");

                entity.Property(e => e.CaducaInactiva).HasColumnName("CADUCA_INACTIVA");

                entity.Property(e => e.CantidadRetencionesIvaislr)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("CantidadRetencionesIVAISLR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ConstCqu)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstCQU");

                entity.Property(e => e.ConstMaxDso)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMaxDSO");

                entity.Property(e => e.ConstMaxPmc)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMaxPMC");

                entity.Property(e => e.ConstMaxSqu)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMaxSQU");

                entity.Property(e => e.ConstMinDso)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMinDSO");

                entity.Property(e => e.ConstMinPmc)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMinPMC");

                entity.Property(e => e.ConstMinSqu)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMinSQU");

                entity.Property(e => e.ConstSobMaxPmc)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstSobMaxPMC");

                entity.Property(e => e.CorreoContraloria).HasMaxLength(500);

                entity.Property(e => e.CorriendoComisiones)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CORRIENDO_COMISIONES")
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.CorriendoPreciosJde)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CORRIENDO_PRECIOS_JDE")
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.Corriendomcemb)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CORRIENDOMCEMB")
                    .IsFixedLength();

                entity.Property(e => e.Corriendomcvta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CORRIENDOMCVTA")
                    .IsFixedLength();

                entity.Property(e => e.Corriendovtas)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CORRIENDOVTAS")
                    .IsFixedLength();

                entity.Property(e => e.DiasPorVencerse).HasColumnName("DIAS_POR_VENCERSE");

                entity.Property(e => e.DiasValidez).HasColumnName("DIAS_VALIDEZ");

                entity.Property(e => e.DiasValidezGob).HasColumnName("DIAS_VALIDEZ_GOB");

                entity.Property(e => e.EmailDirector).HasMaxLength(200);

                entity.Property(e => e.EquipoActualizacion).HasMaxLength(100);

                entity.Property(e => e.FechaActualizacion).HasColumnType("datetime");

                entity.Property(e => e.FechaExistenciasStock)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_EXISTENCIAS_STOCK");

                entity.Property(e => e.IndiceRnc)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("IndiceRNC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MesActual)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_ACTUAL");

                entity.Property(e => e.MesControlMarketing).HasColumnName("MES_CONTROL_MARKETING");

                entity.Property(e => e.MesesAtendido).HasColumnName("MESES_ATENDIDO");

                entity.Property(e => e.MesesCobertura).HasDefaultValueSql("((0))");

                entity.Property(e => e.Mespronostico).HasColumnName("MESPRONOSTICO");

                entity.Property(e => e.MillarMinEtl)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("MillarMinETL");

                entity.Property(e => e.MontoCotizacion)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MONTO_COTIZACION");

                entity.Property(e => e.NroCalculoComActual)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NRO_CALCULO_COM_ACTUAL");

                entity.Property(e => e.PondCqu)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PondCQU");

                entity.Property(e => e.PondDso)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PondDSO");

                entity.Property(e => e.PondPmc)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PondPMC");

                entity.Property(e => e.PondSmc)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PondSMC");

                entity.Property(e => e.PondSqu)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PondSQU");

                entity.Property(e => e.PorcAlertCaduca1).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcAlertCaduca2).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcAlertCaduca3).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcLc)
                    .HasColumnType("decimal(4, 2)")
                    .HasColumnName("PORC_LC");

                entity.Property(e => e.Porcbonomc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("porcbonomc");

                entity.Property(e => e.PorcentajeVolumenAdicional)
                    .HasColumnType("decimal(7, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcentajeVolumenCpo)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("PorcentajeVolumenCPO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcentajeVolumenCutSheets)
                    .HasColumnType("decimal(7, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcentajeVolumenEtiquetas)
                    .HasColumnType("decimal(7, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcentajeVolumenIc)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("PorcentajeVolumenIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcentajeVolumenImpresos)
                    .HasColumnType("decimal(7, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcentajeVolumenOfficeProduct)
                    .HasColumnType("decimal(7, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProcesandoExistencias)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.UsuarioActualizacion).HasMaxLength(40);

                entity.Property(e => e.ValidarRif)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.VentaMinEtl)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VentaMinETL");
            });

            modelBuilder.Entity<Cpry106>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("cpry106");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");
            });

            modelBuilder.Entity<Cpry108>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cpry108");

                entity.Property(e => e.ArchivoDiseno)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ARCHIVO_DISENO")
                    .IsFixedLength();

                entity.Property(e => e.BajoTiro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BAJO_TIRO")
                    .IsFixedLength();

                entity.Property(e => e.Cambios)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CAMBIOS")
                    .IsFixedLength();

                entity.Property(e => e.CambiosCopy)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CAMBIOS_COPY")
                    .IsFixedLength();

                entity.Property(e => e.CambiosEspecif)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CAMBIOS_ESPECIF")
                    .IsFixedLength();

                entity.Property(e => e.CantNumExt)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("CANT_NUM_EXT");

                entity.Property(e => e.Cantidad1)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD1");

                entity.Property(e => e.Cantidad2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD2");

                entity.Property(e => e.Cantidad3)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("CANTIDAD3");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.CodigoProducto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.CondNumExtra)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COND_NUM_EXTRA")
                    .IsFixedLength();

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.DenNoBase)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("DEN_NO_BASE");

                entity.Property(e => e.EfectosDArte)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EFECTOS_D_ARTE")
                    .IsFixedLength();

                entity.Property(e => e.Embossing)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EMBOSSING")
                    .IsFixedLength();

                entity.Property(e => e.EntNoBase)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ENT_NO_BASE");

                entity.Property(e => e.Expr1).HasColumnType("numeric(10, 0)");

                entity.Property(e => e.Expr2)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Expr3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Faltante)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FALTANTE")
                    .IsFixedLength();

                entity.Property(e => e.FamiliaProduct)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA_PRODUCT")
                    .IsFixedLength();

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Foil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FOIL")
                    .IsFixedLength();

                entity.Property(e => e.FraseMarginal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FRASE_MARGINAL")
                    .IsFixedLength();

                entity.Property(e => e.ImpresioDCons)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IMPRESIO_D_CONS")
                    .IsFixedLength();

                entity.Property(e => e.LineaProducto)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Micr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MICR")
                    .IsFixedLength();

                entity.Property(e => e.Muestra)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MUESTRA")
                    .IsFixedLength();

                entity.Property(e => e.NoForma)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("NO_FORMA");

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NuevaExacta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NUEVA_EXACTA")
                    .IsFixedLength();

                entity.Property(e => e.NumEnCarbon)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_EN_CARBON");

                entity.Property(e => e.NumEnRojo)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_EN_ROJO");

                entity.Property(e => e.NumNoBase)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("NUM_NO_BASE");

                entity.Property(e => e.NumeracionDe)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMERACION_DE")
                    .IsFixedLength();

                entity.Property(e => e.NumeracionHast)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NUMERACION_HAST")
                    .IsFixedLength();

                entity.Property(e => e.Observaciones)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("OBSERVACIONES");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.OrdenAnterior)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN_ANTERIOR");

                entity.Property(e => e.OrdenComb)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_COMB")
                    .IsFixedLength();

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PosNum)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("POS_NUM")
                    .IsFixedLength();

                entity.Property(e => e.PrecioListM1)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_LIST_M1");

                entity.Property(e => e.PrecioListaM2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_LISTA_M2");

                entity.Property(e => e.PrecioListaM3)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_LISTA_M3");

                entity.Property(e => e.PrecioVentaM1)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA_M1");

                entity.Property(e => e.PrecioVentaM2)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA_M2");

                entity.Property(e => e.PrecioVentaM3)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("PRECIO_VENTA_M3");

                entity.Property(e => e.Prefijo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PREFIJO")
                    .IsFixedLength();

                entity.Property(e => e.Prueba)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRUEBA")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.SobreTiro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SOBRE_TIRO")
                    .IsFixedLength();

                entity.Property(e => e.Sufijo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUFIJO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoNum)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_NUM")
                    .IsFixedLength();

                entity.Property(e => e.TipoProducto)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.UnNumRojo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UN_NUM_ROJO")
                    .IsFixedLength();

                entity.Property(e => e.UnaPerforacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("UNA_PERFORACION")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Cpry113>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CPRY113");

                entity.Property(e => e.CostoPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COSTO_PAPEL");

                entity.Property(e => e.CostoPapelDol)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("COSTO_PAPEL_DOL");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Eliminado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ELIMINADO")
                    .IsFixedLength();

                entity.Property(e => e.PapelFifo)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PAPEL_FIFO")
                    .IsFixedLength();

                entity.Property(e => e.PapelLista)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PAPEL_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.PapelMat)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PAPEL_MAT")
                    .IsFixedLength();

                entity.Property(e => e.RcostoPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOSTO_PAPEL");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Cpry216>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CPRY216");

                entity.Property(e => e.AtencionCte)
                    .HasMaxLength(528)
                    .IsUnicode(false)
                    .HasColumnName("ATENCION_CTE")
                    .IsFixedLength();

                entity.Property(e => e.Cantidad1)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("CANTIDAD1");

                entity.Property(e => e.Cantidad2)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("CANTIDAD2");

                entity.Property(e => e.Cantidad3)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("CANTIDAD3");

                entity.Property(e => e.Cantidad4)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("CANTIDAD4");

                entity.Property(e => e.Cantidad5)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("CANTIDAD5");

                entity.Property(e => e.CantidadEntreg)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("CANTIDAD_ENTREG");

                entity.Property(e => e.CodCliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("COD_CLIENTE");

                entity.Property(e => e.CodOficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodRegion)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("COD_REGION");

                entity.Property(e => e.CodigoGerente)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GERENTE")
                    .IsFixedLength();

                entity.Property(e => e.CodigoSuperv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUPERV")
                    .IsFixedLength();

                entity.Property(e => e.CodigoVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.Despacho)
                    .HasMaxLength(528)
                    .IsUnicode(false)
                    .HasColumnName("DESPACHO")
                    .IsFixedLength();

                entity.Property(e => e.DiasHabiles)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("DIAS_HABILES");

                entity.Property(e => e.Estacion1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESTACION1")
                    .IsFixedLength();

                entity.Property(e => e.Estacion2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESTACION2")
                    .IsFixedLength();

                entity.Property(e => e.Estacion3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESTACION3")
                    .IsFixedLength();

                entity.Property(e => e.Estacion4)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESTACION4")
                    .IsFixedLength();

                entity.Property(e => e.Estacion5)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESTACION5")
                    .IsFixedLength();

                entity.Property(e => e.FecEstEsta1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FEC_EST_ESTA1")
                    .IsFixedLength();

                entity.Property(e => e.FecEstEsta2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FEC_EST_ESTA2")
                    .IsFixedLength();

                entity.Property(e => e.FecEstEsta3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FEC_EST_ESTA3")
                    .IsFixedLength();

                entity.Property(e => e.FecEstEsta4)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FEC_EST_ESTA4")
                    .IsFixedLength();

                entity.Property(e => e.FecEstEsta5)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FEC_EST_ESTA5")
                    .IsFixedLength();

                entity.Property(e => e.FechaArchivo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_ARCHIVO")
                    .IsFixedLength();

                entity.Property(e => e.FechaDespacho)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_DESPACHO")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_FACTURA")
                    .IsFixedLength();

                entity.Property(e => e.FechaNueva)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_NUEVA")
                    .IsFixedLength();

                entity.Property(e => e.FechaOrden)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_ORDEN")
                    .IsFixedLength();

                entity.Property(e => e.FechaPrometida)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_PROMETIDA")
                    .IsFixedLength();

                entity.Property(e => e.FormasPdtes)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("FORMAS_PDTES");

                entity.Property(e => e.FormasPedida)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("FORMAS_PEDIDA");

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.ImpStock)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IMP_STOCK")
                    .IsFixedLength();

                entity.Property(e => e.Job)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("JOB");

                entity.Property(e => e.ListaTotal)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_TOTAL");

                entity.Property(e => e.ListaUnitario)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_UNITARIO");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreForma)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NombreGteReg)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_GTE_REG")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSuperv)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUPERV")
                    .IsFixedLength();

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN")
                    .IsFixedLength();

                entity.Property(e => e.Planificacion)
                    .HasMaxLength(528)
                    .IsUnicode(false)
                    .HasColumnName("PLANIFICACION")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.Reoperacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REOPERACION")
                    .IsFixedLength();

                entity.Property(e => e.RlistaTotal)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RLISTA_TOTAL");

                entity.Property(e => e.RlistaUnitario)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RLISTA_UNITARIO");

                entity.Property(e => e.RventaTotal)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RVENTA_TOTAL");

                entity.Property(e => e.RventaUnitario)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RVENTA_UNITARIO");

                entity.Property(e => e.StatusOrden)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("STATUS_ORDEN")
                    .IsFixedLength();

                entity.Property(e => e.SugerenciaAten)
                    .HasMaxLength(528)
                    .IsUnicode(false)
                    .HasColumnName("SUGERENCIA_ATEN")
                    .IsFixedLength();

                entity.Property(e => e.SugerenciaDesp)
                    .HasMaxLength(528)
                    .IsUnicode(false)
                    .HasColumnName("SUGERENCIA_DESP")
                    .IsFixedLength();

                entity.Property(e => e.SugerenciaPlan)
                    .HasMaxLength(528)
                    .IsUnicode(false)
                    .HasColumnName("SUGERENCIA_PLAN")
                    .IsFixedLength();

                entity.Property(e => e.VentaTotal)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_TOTAL");

                entity.Property(e => e.VentaUnitario)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_UNITARIO");
            });

            modelBuilder.Entity<Csmy003>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Csmy003");

                entity.Property(e => e.AreaCobranz)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Area_Cobranz")
                    .IsFixedLength();

                entity.Property(e => e.Asignacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Canal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANAL")
                    .IsFixedLength();

                entity.Property(e => e.Categoria)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ClientContado)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Client_Contado")
                    .IsFixedLength();

                entity.Property(e => e.ClienteNuevo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Cliente_Nuevo")
                    .IsFixedLength();

                entity.Property(e => e.Cobrador)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodMcpo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Cod_Mcpo")
                    .IsFixedLength();

                entity.Property(e => e.CodProveedor)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Cod_Proveedor")
                    .IsFixedLength();

                entity.Property(e => e.CodSubSegmento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Cod_SubSegmento")
                    .IsFixedLength();

                entity.Property(e => e.Codigo).HasColumnName("CODIGO");

                entity.Property(e => e.CodigoCiudad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Codigo_Ciudad")
                    .IsFixedLength();

                entity.Property(e => e.CodigoEstado)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Codigo_Estado")
                    .IsFixedLength();

                entity.Property(e => e.CodigoMcpo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Codigo_Mcpo")
                    .IsFixedLength();

                entity.Property(e => e.CodigoParroq)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Codigo_Parroq")
                    .IsFixedLength();

                entity.Property(e => e.CodigoPostal)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Codigo_Postal")
                    .IsFixedLength();

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Codigo_Region")
                    .IsFixedLength();

                entity.Property(e => e.ContCarg1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Carg_1")
                    .IsFixedLength();

                entity.Property(e => e.ContCarg2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Carg_2")
                    .IsFixedLength();

                entity.Property(e => e.ContCarg3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Carg_3")
                    .IsFixedLength();

                entity.Property(e => e.ContEmail1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Email_1")
                    .IsFixedLength();

                entity.Property(e => e.ContEmail2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Email_2")
                    .IsFixedLength();

                entity.Property(e => e.ContEmail3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Email_3")
                    .IsFixedLength();

                entity.Property(e => e.ContFechNacm1)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("Cont_FechNacm_1");

                entity.Property(e => e.ContFechNacm2)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("Cont_FechNacm_2");

                entity.Property(e => e.ContFechNacm3)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("Cont_FechNacm_3");

                entity.Property(e => e.ContNomb1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Nomb_1")
                    .IsFixedLength();

                entity.Property(e => e.ContNomb2)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Nomb_2")
                    .IsFixedLength();

                entity.Property(e => e.ContNomb3)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Nomb_3")
                    .IsFixedLength();

                entity.Property(e => e.ContTelf1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Telf_1")
                    .IsFixedLength();

                entity.Property(e => e.ContTelf2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Telf_2")
                    .IsFixedLength();

                entity.Property(e => e.ContTelf3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("Cont_Telf_3")
                    .IsFixedLength();

                entity.Property(e => e.DiaDeCobro)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Dia_de_Cobro")
                    .IsFixedLength();

                entity.Property(e => e.Direccion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Direccion1)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Direccion2)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EMailClient)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("E_mail_Client")
                    .IsFixedLength();

                entity.Property(e => e.ExentoDeImpuesto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Exento_de_Impuesto")
                    .IsFixedLength();

                entity.Property(e => e.FApertura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("F_Apertura");

                entity.Property(e => e.FModificacion)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("F_Modificacion");

                entity.Property(e => e.FUltmCompra)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("F_Ultm_Compra");

                entity.Property(e => e.Fax)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagInactivo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Flag_Inactivo")
                    .IsFixedLength();

                entity.Property(e => e.FlagMat)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Flag_Mat")
                    .IsFixedLength();

                entity.Property(e => e.FlagMod03)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagModificado)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Flag_Modificado")
                    .IsFixedLength();

                entity.Property(e => e.FlagNuevo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Flag_Nuevo")
                    .IsFixedLength();

                entity.Property(e => e.GiroNegocio)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("Giro_Negocio")
                    .IsFixedLength();

                entity.Property(e => e.Grupo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LCredito)
                    .HasColumnType("money")
                    .HasColumnName("L_Credito");

                entity.Property(e => e.Nit)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NoRegTribut)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("No_Reg_Tribut")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OficinaVenta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Oficina_Venta")
                    .IsFixedLength();

                entity.Property(e => e.OrdenCompra)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Orden_Compra")
                    .IsFixedLength();

                entity.Property(e => e.RepresLegal)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Repres_Legal")
                    .IsFixedLength();

                entity.Property(e => e.RutCartero)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Rut_Cartero")
                    .IsFixedLength();

                entity.Property(e => e.Segmento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SubSegmentoa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TImpuesto).HasColumnName("T_Impuesto");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Telefono1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoNegocio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Tipo_Negocio")
                    .IsFixedLength();

                entity.Property(e => e.Vendedor1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Csmy005>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CSMY005");

                entity.Property(e => e.Activo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVO")
                    .IsFixedLength();

                entity.Property(e => e.Asignacion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ASIGNACION")
                    .IsFixedLength();

                entity.Property(e => e.Categoria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA")
                    .IsFixedLength();

                entity.Property(e => e.ClaseVendedor)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLASE_VENDEDOR");

                entity.Property(e => e.Club300Asistid)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLUB300_ASISTID");

                entity.Property(e => e.Cobrador)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COBRADOR")
                    .IsFixedLength();

                entity.Property(e => e.CodDivision)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("COD_DIVISION");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoOverride)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CODIGO_OVERRIDE");

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionComprd)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_COMPRD");

                entity.Property(e => e.ComisionFactur)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMISION_FACTUR")
                    .IsFixedLength();

                entity.Property(e => e.ComisionImpres)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_IMPRES");

                entity.Property(e => e.ComisionOrden)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMISION_ORDEN")
                    .IsFixedLength();

                entity.Property(e => e.ComisionServ)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_SERV");

                entity.Property(e => e.ComisionStock)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_STOCK");

                entity.Property(e => e.CompanyBeeper)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("COMPANY_BEEPER");

                entity.Property(e => e.Consecutivo)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CONSECUTIVO");

                entity.Property(e => e.CotCorrelativo)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("COT_CORRELATIVO");

                entity.Property(e => e.EMail)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL")
                    .IsFixedLength();

                entity.Property(e => e.ExtTelefonica)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("EXT_TELEFONICA");

                entity.Property(e => e.FechaRetiro)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_RETIRO");

                entity.Property(e => e.Ficha)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FICHA")
                    .IsFixedLength();

                entity.Property(e => e.FlagCambio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_CAMBIO")
                    .IsFixedLength();

                entity.Property(e => e.FlagDeGerente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_DE_GERENTE")
                    .IsFixedLength();

                entity.Property(e => e.FlagGerenteOf)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_GERENTE_OF")
                    .IsFixedLength();

                entity.Property(e => e.FlagReplicar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_REPLICAR")
                    .IsFixedLength();

                entity.Property(e => e.FlagRetirado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_RETIRADO")
                    .IsFixedLength();

                entity.Property(e => e.FlagSupervisor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.FreeLance)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_LANCE")
                    .IsFixedLength();

                entity.Property(e => e.Garantia)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GARANTIA")
                    .IsFixedLength();

                entity.Property(e => e.GerenteOficina)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Grupo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("GRUPO");

                entity.Property(e => e.NombAbreviado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ABREVIADO")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NroDeClientes)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NRO_DE_CLIENTES");

                entity.Property(e => e.NroVendedor)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NRO_VENDEDOR");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.OrdenRep)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ORDEN_REP");

                entity.Property(e => e.Ordenado)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("ORDENADO");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.Pais)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PAIS");

                entity.Property(e => e.Password)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("@PASSWORD")
                    .IsFixedLength();

                entity.Property(e => e.Pedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.Posicion)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("POSICION");

                entity.Property(e => e.PuntosDelClub)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("PUNTOS_DEL_CLUB");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.Rowguid).HasColumnName("rowguid");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.TlfCelular)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TLF_CELULAR")
                    .IsFixedLength();

                entity.Property(e => e.UnidadBeeper)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_BEEPER")
                    .IsFixedLength();

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Csmy021>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CSMY021");

                entity.Property(e => e.CarbSpot)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CARB_SPOT")
                    .IsFixedLength();

                entity.Property(e => e.ClasePapel)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CLASE_PAPEL");

                entity.Property(e => e.CodCarbon)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("COD_CARBON")
                    .IsFixedLength();

                entity.Property(e => e.CodPapel)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("COD_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.ColorCarbon)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COLOR_CARBON")
                    .IsFixedLength();

                entity.Property(e => e.ColorPapel)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("COLOR_PAPEL");

                entity.Property(e => e.ConPrimTintar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CON_PRIM_TINTAR")
                    .IsFixedLength();

                entity.Property(e => e.CondCuarTinta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COND_CUAR_TINTA")
                    .IsFixedLength();

                entity.Property(e => e.CondPrimTinta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COND_PRIM_TINTA")
                    .IsFixedLength();

                entity.Property(e => e.CondQuinTinta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COND_QUIN_TINTA")
                    .IsFixedLength();

                entity.Property(e => e.CondSegTinta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COND_SEG_TINTA")
                    .IsFixedLength();

                entity.Property(e => e.CondSegTintar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COND_SEG_TINTAR")
                    .IsFixedLength();

                entity.Property(e => e.CondSexTinta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COND_SEX_TINTA")
                    .IsFixedLength();

                entity.Property(e => e.CondTerTintar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COND_TER_TINTAR")
                    .IsFixedLength();

                entity.Property(e => e.CondTercTinta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COND_TERC_TINTA")
                    .IsFixedLength();

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.CuarTintaFren)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CUAR_TINTA_FREN")
                    .IsFixedLength();

                entity.Property(e => e.CuarTintaResp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CUAR_TINTA_RESP")
                    .IsFixedLength();

                entity.Property(e => e.MedTalonDer)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("MED_TALON_DER")
                    .IsFixedLength();

                entity.Property(e => e.MedTalonIzq)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("MED_TALON_IZQ")
                    .IsFixedLength();

                entity.Property(e => e.Medcarbonent)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MEDCARBONENT");

                entity.Property(e => e.MedidaCarbon)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("MEDIDA_CARBON")
                    .IsFixedLength();

                entity.Property(e => e.MedidaPapel)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_PAPEL");

                entity.Property(e => e.NoPartePapel)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("NO_PARTE_PAPEL");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.OrdenCorrelati)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN_CORRELATI")
                    .IsFixedLength();

                entity.Property(e => e.Parte)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTE");

                entity.Property(e => e.PerfHorizontal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PERF_HORIZONTAL")
                    .IsFixedLength();

                entity.Property(e => e.PerfVertical)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PERF_VERTICAL")
                    .IsFixedLength();

                entity.Property(e => e.PesoPapel)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("PESO_PAPEL");

                entity.Property(e => e.PosTalon)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("POS_TALON")
                    .IsFixedLength();

                entity.Property(e => e.PrimTintaFte)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("PRIM_TINTA_FTE")
                    .IsFixedLength();

                entity.Property(e => e.PrimTintaResp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("PRIM_TINTA_RESP")
                    .IsFixedLength();

                entity.Property(e => e.QuinTintaFren)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("QUIN_TINTA_FREN")
                    .IsFixedLength();

                entity.Property(e => e.QuinTintaResp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("QUIN_TINTA_RESP")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.SegTintaFrent)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEG_TINTA_FRENT")
                    .IsFixedLength();

                entity.Property(e => e.SegTintaResp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEG_TINTA_RESP")
                    .IsFixedLength();

                entity.Property(e => e.SexTintaFren)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEX_TINTA_FREN")
                    .IsFixedLength();

                entity.Property(e => e.SexTintaResp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("SEX_TINTA_RESP")
                    .IsFixedLength();

                entity.Property(e => e.TercTintaFren)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("TERC_TINTA_FREN")
                    .IsFixedLength();

                entity.Property(e => e.TercTintaResp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("TERC_TINTA_RESP")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Csmy036>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CSMY036");

                entity.Property(e => e.CantidadXAnch).HasColumnName("CANTIDAD_X_ANCH");

                entity.Property(e => e.CodResponsable).HasColumnName("COD_RESPONSABLE");

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.CodigoProduct)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_PRODUCT")
                    .IsFixedLength();

                entity.Property(e => e.CodprodRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPROD_RPG")
                    .IsFixedLength();

                entity.Property(e => e.DescripVta)
                    .HasColumnType("text")
                    .HasColumnName("DESCRIP_VTA");

                entity.Property(e => e.FamiliaProduct)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA_PRODUCT")
                    .IsFixedLength();

                entity.Property(e => e.FlagCorp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_CORP")
                    .IsFixedLength();

                entity.Property(e => e.FlagDesact)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_DESACT")
                    .IsFixedLength();

                entity.Property(e => e.FlagPrdIntern)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_PRD_INTERN")
                    .IsFixedLength();

                entity.Property(e => e.ImpPorConsumo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IMP_POR_CONSUMO")
                    .IsFixedLength();

                entity.Property(e => e.LineaIncoming).HasColumnName("LINEA_INCOMING");

                entity.Property(e => e.LineaProducto)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.Numero).HasColumnName("NUMERO");

                entity.Property(e => e.PorcCosto).HasColumnName("PORC_COSTO");

                entity.Property(e => e.Prefijo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PREFIJO")
                    .IsFixedLength();

                entity.Property(e => e.PrintNoPrint)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("Print_NoPrint")
                    .IsFixedLength();

                entity.Property(e => e.Recnum)
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECNUM");

                entity.Property(e => e.Sufijo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUFIJO")
                    .IsFixedLength();

                entity.Property(e => e.TipoProducto).HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO")
                    .IsFixedLength();

                entity.Property(e => e.Titulo1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO1")
                    .IsFixedLength();

                entity.Property(e => e.Titulo2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO2")
                    .IsFixedLength();

                entity.Property(e => e.Titulo3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO3")
                    .IsFixedLength();

                entity.Property(e => e.Titulo4)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO4")
                    .IsFixedLength();

                entity.Property(e => e.Titulo5).HasColumnName("TITULO5");

                entity.Property(e => e.TituloPe)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_PE")
                    .IsFixedLength();

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();

                entity.Property(e => e.UnidadCosteo).HasColumnName("UNIDAD_COSTEO");

                entity.Property(e => e.Web)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WEB")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Csmy074>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("csmy074");

                entity.Property(e => e.BencobPorc)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("BENCOB_PORC");

                entity.Property(e => e.Cpic)
                    .HasColumnType("numeric(12, 0)")
                    .HasColumnName("CPIC");

                entity.Property(e => e.Cpig)
                    .HasColumnType("numeric(12, 0)")
                    .HasColumnName("CPIG");

                entity.Property(e => e.Cpnic)
                    .HasColumnType("numeric(12, 0)")
                    .HasColumnName("CPNIC");

                entity.Property(e => e.Cpnig)
                    .HasColumnType("numeric(12, 0)")
                    .HasColumnName("CPNIG");

                entity.Property(e => e.CumisupPorc)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("CUMISUP_PORC");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Elpic)
                    .HasColumnType("numeric(12, 0)")
                    .HasColumnName("ELPIC");

                entity.Property(e => e.Elpig)
                    .HasColumnType("numeric(12, 0)")
                    .HasColumnName("ELPIG");

                entity.Property(e => e.Elpnic)
                    .HasColumnType("numeric(12, 0)")
                    .HasColumnName("ELPNIC");

                entity.Property(e => e.Elpnig)
                    .HasColumnType("numeric(12, 0)")
                    .HasColumnName("ELPNIG");

                entity.Property(e => e.FletePorc)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("FLETE_PORC");

                entity.Property(e => e.ImpPorc)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("IMP_PORC");

                entity.Property(e => e.LineaProducto)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Otros1)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("OTROS1");

                entity.Property(e => e.Otros2)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("OTROS2");

                entity.Property(e => e.Otros3)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("OTROS3");

                entity.Property(e => e.Otros4)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("OTROS4");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.Rowguid).HasColumnName("rowguid");

                entity.Property(e => e.RoyPorc)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("ROY_PORC");

                entity.Property(e => e.RoyaltyMonto)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROYALTY_MONTO");

                entity.Property(e => e.RoyaltyPorc)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("ROYALTY_PORC");
            });

            modelBuilder.Entity<Csmy075>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("CSMY075");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.FamiliaProduct)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA_PRODUCT")
                    .IsFixedLength();

                entity.Property(e => e.LineaProducto)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.LineaYFamilia)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_Y_FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.PorcPrecInter)
                    .HasColumnType("decimal(8, 4)")
                    .HasColumnName("PORC_PREC_INTER");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");
            });

            modelBuilder.Entity<Csmy1761>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("csmy1761");

                entity.Property(e => e.CodOficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COD_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombZona)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ZONA")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.TipoComercio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_COMERCIO")
                    .IsFixedLength();

                entity.Property(e => e.ZonCom)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZON_COM")
                    .IsFixedLength();
            });

            modelBuilder.Entity<CuotaVentasGrupo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cuota_Ventas_Grupo");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");
            });

            modelBuilder.Entity<CuotasCobranza>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CUOTAS_COBRANZA");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CodVendedor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");
            });

            modelBuilder.Entity<CuotasVenta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CUOTAS_VENTAS");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CodVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");
            });

            modelBuilder.Entity<DescProdCventa>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Desc_Prod_CVentas");

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Deslin>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("DESLIN_INDEX00");

                entity.ToTable("DESLIN");

                entity.Property(e => e.Recnum)
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECNUM");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MetodoPrecio)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Papel)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAPEL")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Partes).HasColumnName("PARTES");
            });

            modelBuilder.Entity<Dias09>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIAS09");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ano");

                entity.Property(e => e.Cia)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cia");

                entity.Property(e => e.Dias)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("dias");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("mes");

                entity.Property(e => e.NombreCia)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombre_cia")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombre_oficina")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombre_region")
                    .IsFixedLength();

                entity.Property(e => e.NombreSupervisor)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombre_supervisor")
                    .IsFixedLength();

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombre_vendedor")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("oficina");

                entity.Property(e => e.Region)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("region");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("supervisor")
                    .IsFixedLength();

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("vendedor")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Diascalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("diascalle");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("ano");

                entity.Property(e => e.Cia)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cia");

                entity.Property(e => e.Dias)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("dias");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("mes");

                entity.Property(e => e.NombreCia)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombre_cia")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombre_oficina")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombre_region")
                    .IsFixedLength();

                entity.Property(e => e.NombreSupervisor)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombre_supervisor")
                    .IsFixedLength();

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nombre_vendedor")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("oficina");

                entity.Property(e => e.Region)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("region");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("supervisor")
                    .IsFixedLength();

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("vendedor")
                    .IsFixedLength();
            });

            modelBuilder.Entity<DwCsmy005>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DW_CSMY005");

                entity.Property(e => e.Activo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVO")
                    .IsFixedLength();

                entity.Property(e => e.Asignacion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ASIGNACION")
                    .IsFixedLength();

                entity.Property(e => e.Categoria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA")
                    .IsFixedLength();

                entity.Property(e => e.ClaseVendedor)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE_VENDEDOR");

                entity.Property(e => e.Club300Asistid)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLUB300_ASISTID");

                entity.Property(e => e.Cobrador)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COBRADOR")
                    .IsFixedLength();

                entity.Property(e => e.CodDivision)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("COD_DIVISION");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoOverride)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("CODIGO_OVERRIDE");

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionComprd)
                    .HasColumnType("decimal(4, 2)")
                    .HasColumnName("COMISION_COMPRD");

                entity.Property(e => e.ComisionFactur)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMISION_FACTUR")
                    .IsFixedLength();

                entity.Property(e => e.ComisionImpres)
                    .HasColumnType("decimal(4, 2)")
                    .HasColumnName("COMISION_IMPRES");

                entity.Property(e => e.ComisionOrden)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMISION_ORDEN")
                    .IsFixedLength();

                entity.Property(e => e.ComisionServ)
                    .HasColumnType("decimal(4, 2)")
                    .HasColumnName("COMISION_SERV");

                entity.Property(e => e.ComisionStock)
                    .HasColumnType("decimal(4, 2)")
                    .HasColumnName("COMISION_STOCK");

                entity.Property(e => e.CompanyBeeper)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("COMPANY_BEEPER");

                entity.Property(e => e.Consecutivo)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("CONSECUTIVO");

                entity.Property(e => e.CotCorrelativo)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("COT_CORRELATIVO");

                entity.Property(e => e.EMail)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL")
                    .IsFixedLength();

                entity.Property(e => e.ExtTelefonica)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("EXT_TELEFONICA");

                entity.Property(e => e.FechaRetiro)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_RETIRO");

                entity.Property(e => e.Ficha)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FICHA")
                    .IsFixedLength();

                entity.Property(e => e.FlagCambio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_CAMBIO")
                    .IsFixedLength();

                entity.Property(e => e.FlagDeGerente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_DE_GERENTE")
                    .IsFixedLength();

                entity.Property(e => e.FlagGerenteOf)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_GERENTE_OF")
                    .IsFixedLength();

                entity.Property(e => e.FlagReplicar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_REPLICAR")
                    .IsFixedLength();

                entity.Property(e => e.FlagRetirado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_RETIRADO")
                    .IsFixedLength();

                entity.Property(e => e.FlagSupervisor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.FreeLance)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FREE_LANCE")
                    .IsFixedLength();

                entity.Property(e => e.Garantia)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GARANTIA")
                    .IsFixedLength();

                entity.Property(e => e.GerenteOficina)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Grupo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("GRUPO");

                entity.Property(e => e.NombAbreviado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ABREVIADO")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NroDeClientes)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("NRO_DE_CLIENTES");

                entity.Property(e => e.NroVendedor)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("NRO_VENDEDOR");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.OrdenRep)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ORDEN_REP");

                entity.Property(e => e.Ordenado)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("ORDENADO");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.Pais)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PAIS");

                entity.Property(e => e.Password)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("@PASSWORD")
                    .IsFixedLength();

                entity.Property(e => e.Pedido)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.Posicion)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("POSICION");

                entity.Property(e => e.PuntosDelClub)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("PUNTOS_DEL_CLUB");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.Rowguid).HasColumnName("rowguid");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.TlfCelular)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TLF_CELULAR")
                    .IsFixedLength();

                entity.Property(e => e.UnidadBeeper)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_BEEPER")
                    .IsFixedLength();

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Dwtinta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DWTINTAS");

                entity.HasIndex(e => e.Orden, "dep_DwTintasorden");

                entity.Property(e => e.CantTintas).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Color).HasMaxLength(6);

                entity.Property(e => e.Maquina).HasMaxLength(10);

                entity.Property(e => e.Orden).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<Ecepcioncostocliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ecepcioncostocliente");

                entity.Property(e => e.Año).HasColumnName("AÑO");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.Costo).HasColumnName("COSTO");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.PComis).HasColumnName("P_COMIS");

                entity.Property(e => e.Producto)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCTO");
            });

            modelBuilder.Entity<Embarque>(entity =>
            {
                entity.HasKey(e => new { e.Transaccion, e.Documento })
                    .IsClustered(false);

                entity.ToTable("embarques");

                entity.HasIndex(e => new { e.Transaccion, e.Documento }, "IX_embarques")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.AloContable)
                    .HasColumnName("ALO_CONTABLE")
                    .HasComputedColumnSql("(datepart(year,[fecha_factura]))", false);

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.MesContable)
                    .HasColumnName("MES_CONTABLE")
                    .HasComputedColumnSql("(datepart(month,[fecha_factura]))", false);

                entity.Property(e => e.Municipio)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MUNICIPIO");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreMunicipio)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.PorcIva)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_IVA");

                entity.Property(e => e.RecordNumber)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.TipoNegocio)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("TIPO_NEGOCIO");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Usuario)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO")
                    .IsFixedLength();

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("ZONA");
            });

            modelBuilder.Entity<EmbarquesPorMunicipio>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("EmbarquesPorMunicipio");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Iva)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("IVA");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<Encuesta01>(entity =>
            {
                entity.HasKey(e => new { e.CodCliente, e.Orden, e.FechaEntrega, e.Rnc })
                    .IsClustered(false);

                entity.ToTable("ENCUESTA_01");

                entity.HasIndex(e => new { e.CodCliente, e.Orden }, "IX_ENCUESTA_01")
                    .IsClustered();

                entity.HasIndex(e => e.Recnum, "IX_ENCUESTA_01_1");

                entity.HasIndex(e => e.Orden, "dep_Encuesta_01orden");

                entity.Property(e => e.CodCliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("COD_CLIENTE")
                    .HasComment("CODIGO DEL CLIENTE");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN")
                    .HasComment("NUMERO DE ORDEN");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ENTREGA")
                    .HasComment("Fecha de despacho");

                entity.Property(e => e.Rnc).HasColumnName("RNC");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE")
                    .IsFixedLength()
                    .HasComment("NOMBRE DEL CLIENTE");

                entity.Property(e => e.CodOficina)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("COD_OFICINA")
                    .HasComment("CODIGO DE OFICINA");

                entity.Property(e => e.CodVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_VENDEDOR")
                    .IsFixedLength()
                    .HasComment("CODIGO DEL VENDEDOR");

                entity.Property(e => e.Cp1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CP1")
                    .IsFixedLength()
                    .HasComment("CALIDAD DEL PRODUCTO (MUY BUENO)");

                entity.Property(e => e.Cp2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CP2")
                    .IsFixedLength()
                    .HasComment("CALIDAD DEL PRODUCTO (BUENO)");

                entity.Property(e => e.Cp3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CP3")
                    .IsFixedLength()
                    .HasComment("CALIDAD DEL PRODUCTO (REGULAR)");

                entity.Property(e => e.Cp4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CP4")
                    .IsFixedLength()
                    .HasComment("CALIDAD DEL PRODUCTO (MALO)");

                entity.Property(e => e.Efectiva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EFECTIVA")
                    .IsFixedLength();

                entity.Property(e => e.EncuestaCliente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENCUESTA_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.FechaEncuesta)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ENCUESTA")
                    .HasComment("FECHA REALIZACIÓN DE LA ENCUESTA");

                entity.Property(e => e.FechaReg)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REG");

                entity.Property(e => e.ObservacionesCp)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES_CP")
                    .IsFixedLength()
                    .HasComment("Observaciones Calidad del Producto");

                entity.Property(e => e.ObservacionesGnrl)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES_GNRL")
                    .IsFixedLength();

                entity.Property(e => e.ObservacionesSt)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES_ST")
                    .IsFixedLength()
                    .HasComment("Observaciones Servicio TRansporte");

                entity.Property(e => e.ObservacionesSv)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES_SV")
                    .IsFixedLength()
                    .HasComment("Observaciones Servicio del Vendedor");

                entity.Property(e => e.ObservacionesTe)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES_TE")
                    .IsFixedLength()
                    .HasComment("Observaciones Tiempo de Entrega");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength()
                    .HasComment("NOMBRE OFICINA");

                entity.Property(e => e.Recnum)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECNUM");

                entity.Property(e => e.Rif)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("RIF")
                    .IsFixedLength()
                    .HasComment("NUMERO REGISTRO TRIBUTARIO");

                entity.Property(e => e.St1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ST1")
                    .IsFixedLength()
                    .HasComment("SERVICIO DEL TRANSPORTISTA (MUY BUENO)");

                entity.Property(e => e.St2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ST2")
                    .IsFixedLength()
                    .HasComment("SERVICIO DEL TRANSPORTISTA (BUENO)");

                entity.Property(e => e.St3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ST3")
                    .IsFixedLength()
                    .HasComment("SERVICIO DEL TRANSPORTISTA (REGULAR)");

                entity.Property(e => e.St4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ST4")
                    .IsFixedLength()
                    .HasComment("SERVICIO DEL TRANSPORTISTA (MALO)");

                entity.Property(e => e.Sv1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SV1")
                    .IsFixedLength()
                    .HasComment("SERVICIO DEL VENDEDOR (MUY BUENO)");

                entity.Property(e => e.Sv2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SV2")
                    .IsFixedLength()
                    .HasComment("SERVICIO DEL VENDEDOR (BUENO)");

                entity.Property(e => e.Sv3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SV3")
                    .IsFixedLength()
                    .HasComment("SERVICIO DEL VENDEDOR (REGULAR)");

                entity.Property(e => e.Sv4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SV4")
                    .IsFixedLength()
                    .HasComment("SERVICIO DEL VENDEDOR (MALO)");

                entity.Property(e => e.Te1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TE1")
                    .IsFixedLength()
                    .HasComment("TIEMPO DE ENTREGA (MUY BUENO)");

                entity.Property(e => e.Te2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TE2")
                    .IsFixedLength()
                    .HasComment("TIEMPO DE ENTREGA (BUENO)");

                entity.Property(e => e.Te3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TE3")
                    .IsFixedLength()
                    .HasComment("TIEMPO DE ENTREGA (REGULAR)");

                entity.Property(e => e.Te4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TE4")
                    .IsFixedLength()
                    .HasComment("TIEMPO DE ENTREGA (MALO)");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength()
                    .HasComment("Tipo de orden");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength()
                    .HasComment("NOMBRE VENDEDOR");
            });

            modelBuilder.Entity<Encuesta01bk>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ENCUESTA_01BK");

                entity.HasIndex(e => e.Orden, "dep_Encuesta_01bkorden");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.CodCliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("COD_CLIENTE");

                entity.Property(e => e.CodOficina)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Cp1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CP1")
                    .IsFixedLength();

                entity.Property(e => e.Cp2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CP2")
                    .IsFixedLength();

                entity.Property(e => e.Cp3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CP3")
                    .IsFixedLength();

                entity.Property(e => e.Cp4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CP4")
                    .IsFixedLength();

                entity.Property(e => e.Efectiva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EFECTIVA")
                    .IsFixedLength();

                entity.Property(e => e.EncuestaCliente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENCUESTA_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.FechaEncuesta)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ENCUESTA");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ENTREGA");

                entity.Property(e => e.FechaReg)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REG");

                entity.Property(e => e.ObservacionesCp)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES_CP")
                    .IsFixedLength();

                entity.Property(e => e.ObservacionesGnrl)
                    .HasMaxLength(350)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES_GNRL")
                    .IsFixedLength();

                entity.Property(e => e.ObservacionesSt)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES_ST")
                    .IsFixedLength();

                entity.Property(e => e.ObservacionesSv)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES_SV")
                    .IsFixedLength();

                entity.Property(e => e.ObservacionesTe)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACIONES_TE")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Rif)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("RIF")
                    .IsFixedLength();

                entity.Property(e => e.Rnc).HasColumnName("RNC");

                entity.Property(e => e.St1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ST1")
                    .IsFixedLength();

                entity.Property(e => e.St2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ST2")
                    .IsFixedLength();

                entity.Property(e => e.St3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ST3")
                    .IsFixedLength();

                entity.Property(e => e.St4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ST4")
                    .IsFixedLength();

                entity.Property(e => e.Sv1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SV1")
                    .IsFixedLength();

                entity.Property(e => e.Sv2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SV2")
                    .IsFixedLength();

                entity.Property(e => e.Sv3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SV3")
                    .IsFixedLength();

                entity.Property(e => e.Sv4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SV4")
                    .IsFixedLength();

                entity.Property(e => e.Te1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TE1")
                    .IsFixedLength();

                entity.Property(e => e.Te2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TE2")
                    .IsFixedLength();

                entity.Property(e => e.Te3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TE3")
                    .IsFixedLength();

                entity.Property(e => e.Te4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TE4")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Encuesta02>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ENCUESTA_02");

                entity.Property(e => e.ClienteDespacho)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("CLIENTE_DESPACHO");

                entity.Property(e => e.ClienteEncuesta)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("CLIENTE_ENCUESTA");

                entity.Property(e => e.CodOficina)
                    .HasColumnType("decimal(5, 0)")
                    .HasColumnName("COD_OFICINA");

                entity.Property(e => e.FechaDesde)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_DESDE");

                entity.Property(e => e.FechaHasta)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_HASTA");

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Escenario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESCENARIO");

                entity.Property(e => e.BsmcLista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_LISTA");

                entity.Property(e => e.BsmcVenta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_VENTA");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Fm)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("FM");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Parte).HasColumnName("PARTE");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<Especiale>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESPECIALES");

                entity.Property(e => e.Calcularcajascartones)
                    .HasMaxLength(1)
                    .HasColumnName("CALCULARCAJASCARTONES");

                entity.Property(e => e.Calculartintas)
                    .HasMaxLength(1)
                    .HasColumnName("CALCULARTINTAS");

                entity.Property(e => e.Monto).HasColumnName("MONTO");

                entity.Property(e => e.Montokg).HasColumnName("MONTOKG");

                entity.Property(e => e.Orden)
                    .HasMaxLength(10)
                    .HasColumnName("ORDEN");
            });

            modelBuilder.Entity<EstadisticasOficina>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EstadisticasOficina");

                entity.Property(e => e.Cumplimiento).HasMaxLength(50);

                entity.Property(e => e.Cumplimientos).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Cuotas).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CuotasUsd).HasMaxLength(50);

                entity.Property(e => e.EstacionCxc).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EstacionCxc1)
                    .HasMaxLength(50)
                    .HasColumnName("Estacion_Cxc");

                entity.Property(e => e.EstacionPlanta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EstacionPlanta1)
                    .HasMaxLength(50)
                    .HasColumnName("Estacion_Planta");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Kgs).HasMaxLength(50);

                entity.Property(e => e.Kilogramos).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Oficina).HasMaxLength(200);

                entity.Property(e => e.Pies2).HasMaxLength(50);

                entity.Property(e => e.PiesCuadrados).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.UsdPies2).HasMaxLength(50);

                entity.Property(e => e.UsdPiesCuadrados).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Ventas).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentasUsd).HasMaxLength(50);
            });

            modelBuilder.Entity<EstadisticasRegion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EstadisticasRegion");

                entity.Property(e => e.Cumplimiento).HasMaxLength(50);

                entity.Property(e => e.Cumplimientos).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Cuotas).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CuotasUsd).HasMaxLength(50);

                entity.Property(e => e.EstacionCxc).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EstacionCxc1)
                    .HasMaxLength(50)
                    .HasColumnName("Estacion_Cxc");

                entity.Property(e => e.EstacionPlanta).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EstacionPlanta1)
                    .HasMaxLength(50)
                    .HasColumnName("Estacion_Planta");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Kgs).HasMaxLength(50);

                entity.Property(e => e.Kilogramos).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Pies2).HasMaxLength(50);

                entity.Property(e => e.PiesCuadrados).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Region).HasMaxLength(200);

                entity.Property(e => e.UsdPies2).HasMaxLength(50);

                entity.Property(e => e.UsdPiesCuadrados).HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Ventas).HasColumnType("numeric(18, 2)");

                entity.Property(e => e.VentasUsd).HasMaxLength(50);
            });

            modelBuilder.Entity<EstadisticasWeb1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ESTADISTICAS_WEB_1");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<EstadisticasWeb2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ESTADISTICAS_WEB_2");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Ventas)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTAS");
            });

            modelBuilder.Entity<EstadisticasWeb3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ESTADISTICAS_WEB_3");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC");

                entity.Property(e => e.Ventas)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTAS");
            });

            modelBuilder.Entity<EstadisticasWeb4>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ESTADISTICAS_WEB_4");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Ventas)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTAS");
            });

            modelBuilder.Entity<EstadisticasWebOfic>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ESTADISTICAS_WEB_OFIC");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<EstadisticasWebSup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ESTADISTICAS_WEB_SUP");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<EstadisticasWebVendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ESTADISTICAS_WEB_VENDEDOR");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<EstadisticoCobranzas01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Estadistico_Cobranzas_01");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CodVendedor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Monto)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("MONTO");
            });

            modelBuilder.Entity<Factura>(entity =>
            {
                entity.HasKey(e => new { e.FechaFactura, e.Transaccion, e.Documento, e.Recnum })
                    .HasName("FACTURAS_INDEX06");

                entity.ToTable("FACTURAS");

                entity.HasIndex(e => e.Recnum, "FACTURAS_INDEX00")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.MesContable, e.Oficina, e.FechaFactura, e.Recnum }, "FACTURAS_INDEX08")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_FACTURA")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Documento).HasColumnName("DOCUMENTO");

                entity.Property(e => e.Recnum)
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECNUM");

                entity.Property(e => e.AloContable).HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.BsTt)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad).HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO");

                entity.Property(e => e.Docucanc).HasColumnName("DOCUCANC");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.Familia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Impuesto)
                    .HasColumnType("decimal(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MedDec).HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt).HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum).HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase).HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable).HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable).HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Millares)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO");

                entity.Property(e => e.NombreCliente)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA");

                entity.Property(e => e.Oficina).HasColumnName("OFICINA");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Partes).HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.Porciva)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PORCIVA")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Recnumauxiliar)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RECNUMAUXILIAR");

                entity.Property(e => e.RegionVta)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("RIF")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Tipo).HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TipoProdu)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Ventadolar)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTADOLAR");

                entity.Property(e => e.Zona)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<Facturasc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("FACTURASC");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Rif)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("RIF")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Ventadolar)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTADOLAR");

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Facturasm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FACTURASM");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Recnumauxiliar)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RECNUMAUXILIAR");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Rif)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("RIF")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Ventadolar)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTADOLAR");

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<FacturasxClientes01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("FACTURASxCLIENTES_01");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.Factura)
                    .HasColumnType("decimal(8, 0)")
                    .HasColumnName("FACTURA");

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Fm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FM");

                entity.Property(e => e.Fm1)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("FM");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Parte).HasColumnName("PARTE");
            });

            modelBuilder.Entity<Fm1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("FM1");

                entity.Property(e => e.Fm)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("FM");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Parte).HasColumnName("PARTE");
            });

            modelBuilder.Entity<FmXProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("FM_X_PRODUCTO");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .HasColumnName("nombre_linea");

                entity.Property(e => e.Parte).HasColumnName("PARTE");

                entity.Property(e => e.Porcmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("PORCMC");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .HasColumnName("TIPO_PAPEL");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<Gerente>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("GERENTES");

                entity.Property(e => e.Activo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVO")
                    .IsFixedLength();

                entity.Property(e => e.Asignacion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ASIGNACION")
                    .IsFixedLength();

                entity.Property(e => e.Categoria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA")
                    .IsFixedLength();

                entity.Property(e => e.ClaseVendedor)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLASE_VENDEDOR");

                entity.Property(e => e.Club300Asistid)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLUB300_ASISTID");

                entity.Property(e => e.Cobrador)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COBRADOR")
                    .IsFixedLength();

                entity.Property(e => e.CodDivision)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("COD_DIVISION");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoOverride)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CODIGO_OVERRIDE");

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionComprd)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_COMPRD");

                entity.Property(e => e.ComisionFactur)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMISION_FACTUR")
                    .IsFixedLength();

                entity.Property(e => e.ComisionImpres)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_IMPRES");

                entity.Property(e => e.ComisionOrden)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMISION_ORDEN")
                    .IsFixedLength();

                entity.Property(e => e.ComisionServ)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_SERV");

                entity.Property(e => e.ComisionStock)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_STOCK");

                entity.Property(e => e.CompanyBeeper)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("COMPANY_BEEPER");

                entity.Property(e => e.Consecutivo)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CONSECUTIVO");

                entity.Property(e => e.CotCorrelativo)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("COT_CORRELATIVO");

                entity.Property(e => e.EMail)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL")
                    .IsFixedLength();

                entity.Property(e => e.ExtTelefonica)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("EXT_TELEFONICA");

                entity.Property(e => e.FechaRetiro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_RETIRO");

                entity.Property(e => e.Ficha)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FICHA")
                    .IsFixedLength();

                entity.Property(e => e.FlagCambio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_CAMBIO")
                    .IsFixedLength();

                entity.Property(e => e.FlagDeGerente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_DE_GERENTE")
                    .IsFixedLength();

                entity.Property(e => e.FlagReplicar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_REPLICAR")
                    .IsFixedLength();

                entity.Property(e => e.FlagRetirado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_RETIRADO")
                    .IsFixedLength();

                entity.Property(e => e.FlagSupervisor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Garantia)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GARANTIA")
                    .IsFixedLength();

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Grupo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("GRUPO");

                entity.Property(e => e.NombAbreviado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ABREVIADO")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NroDeClientes)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NRO_DE_CLIENTES");

                entity.Property(e => e.NroVendedor)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NRO_VENDEDOR");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.OrdenRep)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ORDEN_REP");

                entity.Property(e => e.Ordenado)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("ORDENADO");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.Pais)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PAIS");

                entity.Property(e => e.Password)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("@PASSWORD")
                    .IsFixedLength();

                entity.Property(e => e.Pedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.Posicion)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("POSICION");

                entity.Property(e => e.PuntosDelClub)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("PUNTOS_DEL_CLUB");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.TlfCelular)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TLF_CELULAR")
                    .IsFixedLength();

                entity.Property(e => e.UnidadBeeper)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_BEEPER")
                    .IsFixedLength();

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Guiahist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GUIAHIST");

                entity.Property(e => e.Bultos).HasColumnName("bultos");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("cliente")
                    .IsFixedLength();

                entity.Property(e => e.Despachada)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("despachada");

                entity.Property(e => e.Dias).HasColumnName("dias");

                entity.Property(e => e.Documento)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("documento");

                entity.Property(e => e.Entregada)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("entregada");

                entity.Property(e => e.Flete)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("flete");

                entity.Property(e => e.Guia).HasColumnName("guia");

                entity.Property(e => e.Hora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("hora")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("oficina")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("orden");

                entity.Property(e => e.Peso).HasColumnName("peso");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("status")
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("zona")
                    .IsFixedLength();
            });

            modelBuilder.Entity<HistoricoAcumVenta>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Historico_Acum_Ventas");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Costo)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("COSTO");

                entity.Property(e => e.Ingreso)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Ventas)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTAS");
            });

            modelBuilder.Entity<HistoricoAcumVentasVendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Historico_Acum_Ventas_Vendedor");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Ventas)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTAS");
            });

            modelBuilder.Entity<HistoricoIngresosVendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Historico_Ingresos_Vendedor");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CodigoVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Ingreso)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("INGRESO");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");
            });

            modelBuilder.Entity<Impstock>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("IMPSTOCK");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.Expr1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre_producto")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<IngresosPorVendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("INGRESOS_POR_VENDEDOR");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CodigoConcepto)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CODIGO_CONCEPTO");

                entity.Property(e => e.CodigoVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.ConceptoPago)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO_PAGO")
                    .IsFixedLength();

                entity.Property(e => e.Ficha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FICHA")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MontoPago)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("MONTO_PAGO");

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.TipoNomina)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_NOMINA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<MargenPorVendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("MARGEN POR VENDEDOR");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Ficha)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FICHA")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Metodo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<Mc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mc");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("conteo");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<McAgrupadoProductoOrdenado>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Mc_Agrupado_producto_Ordenado");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Mc1)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("mc1");

                entity.Property(e => e.Mclista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MClista");

                entity.Property(e => e.Mcventa)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MCventa");

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.Parte).HasColumnName("PARTE");

                entity.Property(e => e.SumLista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("Sum_LISTA");

                entity.Property(e => e.SumMc)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("sum_Mc");

                entity.Property(e => e.SumVenta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("Sum_venta");
            });

            modelBuilder.Entity<Mcemb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MCEMB");

                entity.HasIndex(e => new { e.Transaccion, e.Documento, e.Producto }, "IX_MCEMB")
                    .IsClustered()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.MesContable }, "IX_MCEMB_1")
                    .HasFillFactor(70);

                entity.HasIndex(e => e.Orden, "IX_MCEMB_2")
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.Cliente }, "IX_MCEMB_3")
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.Documento, e.Producto }, "IX_MCEMB_4")
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.Cliente, e.AloContable }, "IX_MCEMB_5")
                    .HasFillFactor(70);

                entity.HasIndex(e => e.FechaFactura, "IX_MCEMB_6")
                    .HasFillFactor(70);

                entity.HasIndex(e => e.IdSolicitud, "IX_MCEMB_7")
                    .HasFillFactor(70);

                entity.HasIndex(e => e.Recnumauxiliar, "IX_MCEMB_8");

                entity.HasIndex(e => e.Orden, "dep_McEmborden");

                entity.Property(e => e.A10calBspapel)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("A10CAL_BSPAPEL");

                entity.Property(e => e.A23calBscarbon)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("A23CAL_BSCARBON");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcFinanCpj)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BS_MC_FINAN_CPJ")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bsebitislr)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BSEBITISLR");

                entity.Property(e => e.Bsebitprod)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BSEBITPROD");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.C01calCostodeplacaspulg2)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("C01CAL_COSTODEPLACASPULG2");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.D01calCostotransfertape)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("D01CAL_COSTOTRANSFERTAPE");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.DolPriPago)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Dol_Pri_Pago");

                entity.Property(e => e.E01calCostocarbonspottinta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("E01CAL_COSTOCARBONSPOTTINTA");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.F01calCostocarbonspotplaca)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("F01CAL_COSTOCARBONSPOTPLACA");

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FecPriPago)
                    .HasColumnType("datetime")
                    .HasColumnName("Fec_Pri_Pago");

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.G01calCostotintas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("G01CAL_COSTOTINTAS");

                entity.Property(e => e.Gasflete)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("GASFLETE");

                entity.Property(e => e.Gastributosmun)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("GASTRIBUTOSMUN");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.H01calCostocajas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("H01CAL_COSTOCAJAS");

                entity.Property(e => e.I01calCostootrosmateriales)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("I01CAL_COSTOOTROSMATERIALES");

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Islr)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("ISLR");

                entity.Property(e => e.L19caltotalBeneficios)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("L19CALTOTAL_BENEFICIOS");

                entity.Property(e => e.L19caltotalBeneficiosCpj)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("L19CALTOTAL_BENEFICIOS_CPJ");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.Mcsincom)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("mcsincom");

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre_producto")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.OverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GENPA");

                entity.Property(e => e.OverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GN");

                entity.Property(e => e.POverrideGenpa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GENPA");

                entity.Property(e => e.POverrideGn)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.Porcebitislr)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORCEBITISLR");

                entity.Property(e => e.Porcebitprod)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORCEBITPROD");

                entity.Property(e => e.Porciva)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PORCIVA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Rango1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO1")
                    .IsFixedLength();

                entity.Property(e => e.Rango2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO2")
                    .IsFixedLength();

                entity.Property(e => e.RangoConcesion).HasMaxLength(50);

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RBS_PLACA");

                entity.Property(e => e.RbsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBS_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rbsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMCLISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RCOSTO_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Recnumauxiliar)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RECNUMAUXILIAR");

                entity.Property(e => e.RecordNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Rimpuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("RIMPUESTO");

                entity.Property(e => e.Rmcsincom)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("RMCSINCOM")
                    .HasComputedColumnSql("(case when isnull([VALOR_VENTA],(0))<>(0) then isnull(((isnull([BSMC],(0))-((isnull([COMISION],(0))+isnull([OVERRIDE],(0)))+isnull([OVERGER],(0)))*(2))*(100))/[VALOR_VENTA],(0)) else (0) end)", false);

                entity.Property(e => e.Roverger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RoverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GENPA");

                entity.Property(e => e.RoverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GN");

                entity.Property(e => e.RporcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RporcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_CARBON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("RTOTAL_BS_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_SPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rtotalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALMATOTROS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rtotalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALVARIABLE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TasaPriPago)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Pri_Pago");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoNegocio).HasMaxLength(3);

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Totalcostoprod)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("TOTALCOSTOPROD");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.ValorVentaCpj)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_VENTA_CPJ");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.X01calTotalmaterialesdirectos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X01CAL_TOTALMATERIALESDIRECTOS");

                entity.Property(e => e.X02calTotalmanodeobradirecta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X02CAL_TOTALMANODEOBRADIRECTA");

                entity.Property(e => e.X03calTotalcargafabril)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X03CAL_TOTALCARGAFABRIL");

                entity.Property(e => e.X04calTotalgastosdeventas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X04CAL_TOTALGASTOSDEVENTAS");

                entity.Property(e => e.X05busBspagadosenelmespororden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X05BUS_BSPAGADOSENELMESPORORDEN");

                entity.Property(e => e.X05calTotalotrosgastos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X05CAL_TOTALOTROSGASTOS");

                entity.Property(e => e.X06busHoraspagadasenelmespororden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X06BUS_HORASPAGADASENELMESPORORDEN");

                entity.Property(e => e.X06calTotalgastosadministrativos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X06CAL_TOTALGASTOSADMINISTRATIVOS");

                entity.Property(e => e.X07busHorasrodadasorden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X07BUS_HORASRODADASORDEN");

                entity.Property(e => e.X07calTotalcosto)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X07CAL_TOTALCOSTO");

                entity.Property(e => e.X08busTotalhorastrabajadasenelmes)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X08BUS_TOTALHORASTRABAJADASENELMES");

                entity.Property(e => e.X08calBsebit)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X08CAL_BSEBIT");

                entity.Property(e => e.X09busTotalgastosindirectosdefabricacion)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X09BUS_TOTALGASTOSINDIRECTOSDEFABRICACION");

                entity.Property(e => e.X09calPorcEbit)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X09CAL_PorcEBIT");

                entity.Property(e => e.X10busTotalgastoscontablesdeventas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X10BUS_TOTALGASTOSCONTABLESDEVENTAS");

                entity.Property(e => e.X12busTotalotrosgastoscontables)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X12BUS_TOTALOTROSGASTOSCONTABLES");

                entity.Property(e => e.X13busTotalventasciames)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X13BUS_TOTALVENTASCIAMES");

                entity.Property(e => e.X14busTotalgastoscontablesadministracion)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X14BUS_TOTALGASTOSCONTABLESADMINISTRACION");

                entity.Property(e => e.X15busFormasrodadasorden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X15BUS_FORMASRODADASORDEN");

                entity.Property(e => e.X16busHorasrodadasdocumento)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X16BUS_HORASRODADASDOCUMENTO");

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Mcembm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MCEMBM");

                entity.HasIndex(e => e.Orden, "dep_McEmbmorden");

                entity.Property(e => e.A10calBspapel)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("A10CAL_BSPAPEL");

                entity.Property(e => e.A23calBscarbon)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("A23CAL_BSCARBON");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcFinanCpj)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BS_MC_FINAN_CPJ");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bsebitislr)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BSEBITISLR");

                entity.Property(e => e.Bsebitprod)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BSEBITPROD");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.C01calCostodeplacaspulg2)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("C01CAL_COSTODEPLACASPULG2");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.D01calCostotransfertape)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("D01CAL_COSTOTRANSFERTAPE");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.E01calCostocarbonspottinta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("E01CAL_COSTOCARBONSPOTTINTA");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.F01calCostocarbonspotplaca)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("F01CAL_COSTOCARBONSPOTPLACA");

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.G01calCostotintas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("G01CAL_COSTOTINTAS");

                entity.Property(e => e.Gasflete)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("GASFLETE");

                entity.Property(e => e.Gastributosmun)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("GASTRIBUTOSMUN");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.H01calCostocajas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("H01CAL_COSTOCAJAS");

                entity.Property(e => e.I01calCostootrosmateriales)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("I01CAL_COSTOOTROSMATERIALES");

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Islr)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("ISLR");

                entity.Property(e => e.L19caltotalBeneficios)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("L19CALTOTAL_BENEFICIOS");

                entity.Property(e => e.L19caltotalBeneficiosCpj)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("L19CALTOTAL_BENEFICIOS_CPJ");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.Mcsincom)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("MCSINCOM")
                    .HasComputedColumnSql("(case when isnull([VALOR_VENTA],(0))<>(0) then isnull(((isnull([BSMC],(0))-((isnull([COMISION],(0))+isnull([OVERRIDE],(0)))+isnull([OVERGER],(0)))*(2))*(100))/[VALOR_VENTA],(0)) else (0) end)", false);

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre_producto")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.OverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GENPA");

                entity.Property(e => e.OverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GN");

                entity.Property(e => e.POverrideGenpa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GENPA");

                entity.Property(e => e.POverrideGn)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.Porcebitislr)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORCEBITISLR");

                entity.Property(e => e.Porcebitprod)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORCEBITPROD");

                entity.Property(e => e.Porciva)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PORCIVA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Rango1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO1")
                    .IsFixedLength();

                entity.Property(e => e.Rango2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO2")
                    .IsFixedLength();

                entity.Property(e => e.RangoConcesion).HasMaxLength(50);

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RBS_PLACA");

                entity.Property(e => e.RbsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBS_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rbsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMCLISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RCOSTO_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Recnumauxiliar)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RECNUMAUXILIAR");

                entity.Property(e => e.RecordNumber)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Rimpuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("RIMPUESTO");

                entity.Property(e => e.Rmcsincom)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("RMCSINCOM")
                    .HasComputedColumnSql("(case when isnull([VALOR_VENTA],(0))<>(0) then isnull(((isnull([BSMC],(0))-((isnull([COMISION],(0))+isnull([OVERRIDE],(0)))+isnull([OVERGER],(0)))*(2))*(100))/[VALOR_VENTA],(0)) else (0) end)", false);

                entity.Property(e => e.Roverger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RoverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GENPA");

                entity.Property(e => e.RoverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GN");

                entity.Property(e => e.RporcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RporcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_CARBON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("RTOTAL_BS_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_SPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rtotalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALMATOTROS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rtotalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALVARIABLE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Totalcostoprod)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("TOTALCOSTOPROD");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.ValorVentaCpj)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_VENTA_CPJ");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.X01calTotalmaterialesdirectos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X01CAL_TOTALMATERIALESDIRECTOS");

                entity.Property(e => e.X02calTotalmanodeobradirecta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X02CAL_TOTALMANODEOBRADIRECTA");

                entity.Property(e => e.X03calTotalcargafabril)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X03CAL_TOTALCARGAFABRIL");

                entity.Property(e => e.X04calTotalgastosdeventas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X04CAL_TOTALGASTOSDEVENTAS");

                entity.Property(e => e.X05busBspagadosenelmespororden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X05BUS_BSPAGADOSENELMESPORORDEN");

                entity.Property(e => e.X05calTotalotrosgastos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X05CAL_TOTALOTROSGASTOS");

                entity.Property(e => e.X06busHoraspagadasenelmespororden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X06BUS_HORASPAGADASENELMESPORORDEN");

                entity.Property(e => e.X06calTotalgastosadministrativos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X06CAL_TOTALGASTOSADMINISTRATIVOS");

                entity.Property(e => e.X07busHorasrodadasorden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X07BUS_HORASRODADASORDEN");

                entity.Property(e => e.X07calTotalcosto)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X07CAL_TOTALCOSTO");

                entity.Property(e => e.X08busTotalhorastrabajadasenelmes)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X08BUS_TOTALHORASTRABAJADASENELMES");

                entity.Property(e => e.X08calBsebit)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X08CAL_BSEBIT");

                entity.Property(e => e.X09busTotalgastosindirectosdefabricacion)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X09BUS_TOTALGASTOSINDIRECTOSDEFABRICACION");

                entity.Property(e => e.X09calPorcEbit)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X09CAL_PorcEBIT");

                entity.Property(e => e.X10busTotalgastoscontablesdeventas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X10BUS_TOTALGASTOSCONTABLESDEVENTAS");

                entity.Property(e => e.X12busTotalotrosgastoscontables)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X12BUS_TOTALOTROSGASTOSCONTABLES");

                entity.Property(e => e.X13busTotalventasciames)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X13BUS_TOTALVENTASCIAMES");

                entity.Property(e => e.X14busTotalgastoscontablesadministracion)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X14BUS_TOTALGASTOSCONTABLESADMINISTRACION");

                entity.Property(e => e.X15busFormasrodadasorden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X15BUS_FORMASRODADASORDEN");

                entity.Property(e => e.X16busHorasrodadasdocumento)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X16BUS_HORASRODADASDOCUMENTO");

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Mcembmcuadre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MCEMBMCUADRE");

                entity.HasIndex(e => e.Orden, "dep_McEmbmcuadreorden");

                entity.Property(e => e.A10calBspapel)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("A10CAL_BSPAPEL");

                entity.Property(e => e.A23calBscarbon)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("A23CAL_BSCARBON");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.C01calCostodeplacaspulg2)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("C01CAL_COSTODEPLACASPULG2");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.D01calCostotransfertape)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("D01CAL_COSTOTRANSFERTAPE");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.DolPriPago)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Dol_Pri_Pago");

                entity.Property(e => e.E01calCostocarbonspottinta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("E01CAL_COSTOCARBONSPOTTINTA");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.F01calCostocarbonspotplaca)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("F01CAL_COSTOCARBONSPOTPLACA");

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FecPriPago)
                    .HasColumnType("datetime")
                    .HasColumnName("Fec_Pri_Pago");

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.G01calCostotintas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("G01CAL_COSTOTINTAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.H01calCostocajas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("H01CAL_COSTOCAJAS");

                entity.Property(e => e.I01calCostootrosmateriales)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("I01CAL_COSTOOTROSMATERIALES");

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.Mcsincom)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("MCSINCOM");

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre_producto")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.OverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GENPA");

                entity.Property(e => e.OverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GN");

                entity.Property(e => e.POverrideGenpa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GENPA");

                entity.Property(e => e.POverrideGn)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.Porciva)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PORCIVA");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Rango1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO1")
                    .IsFixedLength();

                entity.Property(e => e.Rango2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO2")
                    .IsFixedLength();

                entity.Property(e => e.RangoConcesion).HasMaxLength(50);

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.RbsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RBS_PLACA");

                entity.Property(e => e.RbsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBS_TT");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rbsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMCLISTA");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.RcostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RCOSTO_TT");

                entity.Property(e => e.Recnumauxiliar)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RECNUMAUXILIAR");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Rimpuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("RIMPUESTO");

                entity.Property(e => e.Rmcsincom)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("RMCSINCOM");

                entity.Property(e => e.Roverger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RoverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GENPA");

                entity.Property(e => e.RoverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GN");

                entity.Property(e => e.RporcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_FINANSC");

                entity.Property(e => e.RporcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_PAPELSC");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.RtotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_CARBON");

                entity.Property(e => e.RtotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("RTOTAL_BS_PAPEL");

                entity.Property(e => e.RtotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_SPOT");

                entity.Property(e => e.Rtotalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALMATOTROS");

                entity.Property(e => e.Rtotalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALVARIABLE");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TasaPriPago)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Pri_Pago");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.ValorVentaCpj)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_VENTA_CPJ");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X01calTotalmaterialesdirectos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X01CAL_TOTALMATERIALESDIRECTOS");

                entity.Property(e => e.X02calTotalmanodeobradirecta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X02CAL_TOTALMANODEOBRADIRECTA");

                entity.Property(e => e.X03calTotalcargafabril)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X03CAL_TOTALCARGAFABRIL");

                entity.Property(e => e.X04calTotalgastosdeventas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X04CAL_TOTALGASTOSDEVENTAS");

                entity.Property(e => e.X05busBspagadosenelmespororden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X05BUS_BSPAGADOSENELMESPORORDEN");

                entity.Property(e => e.X05calTotalotrosgastos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X05CAL_TOTALOTROSGASTOS");

                entity.Property(e => e.X06busHoraspagadasenelmespororden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X06BUS_HORASPAGADASENELMESPORORDEN");

                entity.Property(e => e.X06calTotalgastosadministrativos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X06CAL_TOTALGASTOSADMINISTRATIVOS");

                entity.Property(e => e.X07busHorasrodadasorden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X07BUS_HORASRODADASORDEN");

                entity.Property(e => e.X07calTotalcosto)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X07CAL_TOTALCOSTO");

                entity.Property(e => e.X08busTotalhorastrabajadasenelmes)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X08BUS_TOTALHORASTRABAJADASENELMES");

                entity.Property(e => e.X08calBsebit)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X08CAL_BSEBIT");

                entity.Property(e => e.X09busTotalgastosindirectosdefabricacion)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X09BUS_TOTALGASTOSINDIRECTOSDEFABRICACION");

                entity.Property(e => e.X09calPorcEbit)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X09CAL_PorcEBIT");

                entity.Property(e => e.X10busTotalgastoscontablesdeventas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X10BUS_TOTALGASTOSCONTABLESDEVENTAS");

                entity.Property(e => e.X12busTotalotrosgastoscontables)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X12BUS_TOTALOTROSGASTOSCONTABLES");

                entity.Property(e => e.X13busTotalventasciames)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X13BUS_TOTALVENTASCIAMES");

                entity.Property(e => e.X14busTotalgastoscontablesadministracion)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X14BUS_TOTALGASTOSCONTABLESADMINISTRACION");

                entity.Property(e => e.X15busFormasrodadasorden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X15BUS_FORMASRODADASORDEN");

                entity.Property(e => e.X16busHorasrodadasdocumento)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X16BUS_HORASRODADASDOCUMENTO");

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Mcembplu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MCEMBPlus");

                entity.HasIndex(e => e.Recnumauxiliar, "IX_MCEMBPlus");

                entity.HasIndex(e => new { e.AloContable, e.MesContable }, "IX_MCEMBPlus_1");

                entity.HasIndex(e => new { e.Transaccion, e.Recnumauxiliar }, "IX_MCEMBPlus_2");

                entity.HasIndex(e => e.Producto, "IX_MCEMBPlus_3");

                entity.HasIndex(e => e.Orden, "IX_MCEMBPlus_4");

                entity.HasIndex(e => e.Orden, "dep_McEmbPlusorden");

                entity.Property(e => e.A10calBspapel)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("A10CAL_BSPAPEL");

                entity.Property(e => e.A23calBscarbon)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("A23CAL_BSCARBON");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BS_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BS_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BS_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BS_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BS_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BSMC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("BSMCLISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.C01calCostodeplacaspulg2)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("C01CAL_COSTODEPLACASPULG2");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("COMISION_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("COMISION_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("COMISION_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("COMISION_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("COSTO_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.D01calCostotransfertape)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("D01CAL_COSTOTRANSFERTAPE");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.DolPriPago)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("Dol_Pri_Pago");

                entity.Property(e => e.E01calCostocarbonspottinta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("E01CAL_COSTOCARBONSPOTTINTA");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.F01calCostocarbonspotplaca)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("F01CAL_COSTOCARBONSPOTPLACA");

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FecPriPago)
                    .HasColumnType("datetime")
                    .HasColumnName("Fec_Pri_Pago");

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.G01calCostotintas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("G01CAL_COSTOTINTAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.H01calCostocajas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("H01CAL_COSTOCAJAS");

                entity.Property(e => e.I01calCostootrosmateriales)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("I01CAL_COSTOOTROSMATERIALES");

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.Mcsincom)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("MCSINCOM");

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre_producto")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.OverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GENPA");

                entity.Property(e => e.OverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GN");

                entity.Property(e => e.POverrideGenpa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GENPA");

                entity.Property(e => e.POverrideGn)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.PiesLineales).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.PiesTotales).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PIES_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_MC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.Porciva)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PORCIVA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Rango1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO1")
                    .IsFixedLength();

                entity.Property(e => e.Rango2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO2")
                    .IsFixedLength();

                entity.Property(e => e.RangoConcesion).HasMaxLength(50);

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RBS_PLACA");

                entity.Property(e => e.RbsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBS_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rbsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMCLISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RCOSTO_TT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Recnumauxiliar)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RECNUMAUXILIAR");

                entity.Property(e => e.RecordNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Rimpuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("RIMPUESTO");

                entity.Property(e => e.Rmcsincom)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("RMCSINCOM")
                    .HasComputedColumnSql("(case when isnull([VALOR_VENTA],(0))<>(0) then isnull(((isnull([BSMC],(0))-((isnull([COMISION],(0))+isnull([OVERRIDE],(0)))+isnull([OVERGER],(0)))*(2))*(100))/[VALOR_VENTA],(0)) else (0) end)", false);

                entity.Property(e => e.Roverger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RoverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GENPA");

                entity.Property(e => e.RoverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GN");

                entity.Property(e => e.RporcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RporcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_CARBON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("RTOTAL_BS_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_SPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rtotalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALMATOTROS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rtotalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALVARIABLE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("SDF_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("SDF_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("SDF_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("SDF_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("SDF_GR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("SDF_TL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfV)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("SDF_V")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("Tasa_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TasaPriPago)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("Tasa_Pri_Pago");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoNegocio).HasMaxLength(3);

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("TOTAL_BS_CARBON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("TOTAL_BS_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("TOTAL_BS_SPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("TOTAL_KG_CARBON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("TOTAL_KG_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("TOTAL_KG_SPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("TOTALMATOTROS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("TOTALVARIABLE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.ValorVentaCpj)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_VENTA_CPJ");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.X01calTotalmaterialesdirectos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X01CAL_TOTALMATERIALESDIRECTOS");

                entity.Property(e => e.X02calTotalmanodeobradirecta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X02CAL_TOTALMANODEOBRADIRECTA");

                entity.Property(e => e.X03calTotalcargafabril)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X03CAL_TOTALCARGAFABRIL");

                entity.Property(e => e.X04calTotalgastosdeventas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X04CAL_TOTALGASTOSDEVENTAS");

                entity.Property(e => e.X05busBspagadosenelmespororden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X05BUS_BSPAGADOSENELMESPORORDEN");

                entity.Property(e => e.X05calTotalotrosgastos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X05CAL_TOTALOTROSGASTOS");

                entity.Property(e => e.X06busHoraspagadasenelmespororden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X06BUS_HORASPAGADASENELMESPORORDEN");

                entity.Property(e => e.X06calTotalgastosadministrativos)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X06CAL_TOTALGASTOSADMINISTRATIVOS");

                entity.Property(e => e.X07busHorasrodadasorden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X07BUS_HORASRODADASORDEN");

                entity.Property(e => e.X07calTotalcosto)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X07CAL_TOTALCOSTO");

                entity.Property(e => e.X08busTotalhorastrabajadasenelmes)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X08BUS_TOTALHORASTRABAJADASENELMES");

                entity.Property(e => e.X08calBsebit)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X08CAL_BSEBIT");

                entity.Property(e => e.X09busTotalgastosindirectosdefabricacion)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X09BUS_TOTALGASTOSINDIRECTOSDEFABRICACION");

                entity.Property(e => e.X09calPorcEbit)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X09CAL_PorcEBIT");

                entity.Property(e => e.X10busTotalgastoscontablesdeventas)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X10BUS_TOTALGASTOSCONTABLESDEVENTAS");

                entity.Property(e => e.X12busTotalotrosgastoscontables)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X12BUS_TOTALOTROSGASTOSCONTABLES");

                entity.Property(e => e.X13busTotalventasciames)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X13BUS_TOTALVENTASCIAMES");

                entity.Property(e => e.X14busTotalgastoscontablesadministracion)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X14BUS_TOTALGASTOSCONTABLESADMINISTRACION");

                entity.Property(e => e.X15busFormasrodadasorden)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X15BUS_FORMASRODADASORDEN");

                entity.Property(e => e.X16busHorasrodadasdocumento)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("X16BUS_HORASRODADASDOCUMENTO");

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Mcembrangotitulo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("MCEMBRANGOTITULO");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.CantOrdenes).HasColumnName("cant_ordenes");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Promedio)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("promedio");

                entity.Property(e => e.Rango)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("rango");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<Mcorionm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MCORIONM");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION")
                    .HasComputedColumnSql("(([VALOR_LISTA] - [VALOR_VENTA]) / [VALOR_LISTA] * 100)", false);

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.CorrelativoCal).HasColumnName("CORRELATIVO_CAL");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ID");

                entity.Property(e => e.IdPropuesta).HasColumnName("ID_PROPUESTA");

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre_producto")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.NroCalculo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NRO_CALCULO")
                    .IsFixedLength();

                entity.Property(e => e.NroCotizacion)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("NRO_COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.NroPropuesta).HasColumnName("NRO_PROPUESTA");

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.OverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GENPA");

                entity.Property(e => e.OverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GN");

                entity.Property(e => e.POverrideGenpa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GENPA");

                entity.Property(e => e.POverrideGn)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Mcprom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MCPROM");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION")
                    .HasComputedColumnSql("(([VALOR_LISTA] - [VALOR_VENTA]) / [VALOR_LISTA] * 100)", false);

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre_producto")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.OverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GENPA");

                entity.Property(e => e.OverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GN");

                entity.Property(e => e.POverrideGenpa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GENPA");

                entity.Property(e => e.POverrideGn)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPELSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Mcvtam>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MCVTAM");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("CONCESION")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("conteo");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("correlativo");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PIES_TOTAL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPELSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBS_TT");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rbsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMCLISTA");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RCOSTO_TT");

                entity.Property(e => e.RecordNumber)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("renglon");

                entity.Property(e => e.Roverger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RtotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_CARBON");

                entity.Property(e => e.RtotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("RTOTAL_BS_PAPEL");

                entity.Property(e => e.RtotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_SPOT");

                entity.Property(e => e.Rtotalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALMATOTROS");

                entity.Property(e => e.Rtotalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALVARIABLE");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Mcvtasincomision>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MCVTASINCOMISION");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .HasColumnName("ANULADA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION")
                    .HasComputedColumnSql("(([VALOR_LISTA] - [VALOR_VENTA]) / [VALOR_LISTA] * 100)", false);

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .HasColumnName("FAMILIA");

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .HasColumnName("GRUPO");

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .HasColumnName("LINEA1");

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .HasColumnName("METODO_PRECIO");

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .HasColumnName("NOMBRE_CLIENTE");

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .HasColumnName("nombre_linea");

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .HasColumnName("NOMBRE_OFICINA");

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .HasColumnName("NOMBRE_REGION");

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .HasColumnName("NOMBRE_SUP");

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .HasColumnName("NOMBRE_VEND");

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.Parte).HasColumnName("PARTE");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.RbsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBS_TT");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rbsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMCLISTA");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RCOSTO_TT");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .HasColumnName("REGION_VTA");

                entity.Property(e => e.Roverger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RtotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_CARBON");

                entity.Property(e => e.RtotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("RTOTAL_BS_PAPEL");

                entity.Property(e => e.RtotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_SPOT");

                entity.Property(e => e.Rtotalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALMATOTROS");

                entity.Property(e => e.Rtotalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALVARIABLE");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .HasColumnName("SUPERVISOR");

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .HasColumnName("TIPO_PAPEL");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .HasColumnName("TIPO_PRODU");

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .HasColumnName("TRACANC");

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .HasColumnName("TRANSACCION");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .HasColumnName("VENDEDOR");

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .HasColumnName("ZONA");
            });

            modelBuilder.Entity<Mcvtum>(entity =>
            {
                entity.HasKey(e => e.RecordNumber)
                    .IsClustered(false);

                entity.ToTable("MCVTA");

                entity.HasIndex(e => new { e.Orden, e.Producto }, "IX_MCVTA")
                    .IsClustered()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.MesContable, e.RecordNumber }, "IX_MCVTA_1")
                    .HasFillFactor(70);

                entity.HasIndex(e => e.Orden, "dep_McVtaorden");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("conteo");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("correlativo");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.Docucanc)
                    .HasColumnType("decimal(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("decimal(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Impuesto)
                    .HasColumnType("decimal(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.Mcsincom)
                    .HasColumnType("decimal(38, 11)")
                    .HasColumnName("MCSINCOM")
                    .HasComputedColumnSql("(case when (isnull([VALOR_VENTA],0) <> 0) then (isnull(((isnull([BSMC],0) - (isnull([COMISION],0) + isnull([OVERRIDE],0) + isnull([OVERGER],0)) * 2) * 100 / [VALOR_VENTA]),0)) else 0 end)", false);

                entity.Property(e => e.MedDec)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PIES_TOTAL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPELSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RBS_PLACA");

                entity.Property(e => e.RbsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBS_TT");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rbsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMCLISTA");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RCOSTO_TT");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("renglon");

                entity.Property(e => e.Rimpuesto)
                    .HasColumnType("decimal(16, 4)")
                    .HasColumnName("RIMPUESTO");

                entity.Property(e => e.Roverger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RtotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_CARBON");

                entity.Property(e => e.RtotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("RTOTAL_BS_PAPEL");

                entity.Property(e => e.RtotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_SPOT");

                entity.Property(e => e.Rtotalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALMATOTROS");

                entity.Property(e => e.Rtotalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALVARIABLE");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Signo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Nccne>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nccne");
            });

            modelBuilder.Entity<NominaVendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOMINA_VENDEDOR");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CodigoConcepto)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CODIGO_CONCEPTO");

                entity.Property(e => e.ConceptoPago)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO_PAGO")
                    .IsFixedLength();

                entity.Property(e => e.Ficha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FICHA")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MontoPago)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("MONTO_PAGO");

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.RmontoPago)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RMONTO_PAGO");

                entity.Property(e => e.TipoNomina)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_NOMINA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<OficinasWeb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("OFICINAS_WEB");

                entity.Property(e => e.CodOficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("COD_OFICINA");

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_Oficina");
            });

            modelBuilder.Entity<OrdenEmbarquesVentasCobro>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AloContable).HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.CodigoCliente).HasColumnName("CODIGO_CLIENTE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MesContable).HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreCliente)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.PorcMc).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioFijado)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRECIO_FIJADO");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.ValorVentaBsCo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VALOR_VENTA_BS_CO");

                entity.Property(e => e.ValorVentaBsEm)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VALOR_VENTA_BS_EM");

                entity.Property(e => e.ValorVentaBsEs)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VALOR_VENTA_BS_ES");

                entity.Property(e => e.VentaDolRefEm)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VENTA_DOL_REF_EM");

                entity.Property(e => e.VentaDolRefEs)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VENTA_DOL_REF_ES");

                entity.Property(e => e.VentaUsdCo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VENTA_USD_CO");
            });

            modelBuilder.Entity<OrdenVentasEmbarquesCobro>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.AloContable).HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.CodigoCliente).HasColumnName("CODIGO_CLIENTE");

                entity.Property(e => e.Id)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MesContable).HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreCliente)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.PorcMc).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioFijado)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRECIO_FIJADO");

                entity.Property(e => e.RvalorVentaBsCo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("RVALOR_VENTA_BS_CO");

                entity.Property(e => e.RvalorVentaBsEm)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("RVALOR_VENTA_BS_EM");

                entity.Property(e => e.RvalorVentaBsEs)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("RVALOR_VENTA_BS_ES");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.ValorVentaBsCo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VALOR_VENTA_BS_CO");

                entity.Property(e => e.ValorVentaBsEm)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VALOR_VENTA_BS_EM");

                entity.Property(e => e.ValorVentaBsEs)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VALOR_VENTA_BS_ES");

                entity.Property(e => e.VentaDolRefEm)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VENTA_DOL_REF_EM");

                entity.Property(e => e.VentaDolRefEs)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VENTA_DOL_REF_ES");

                entity.Property(e => e.VentaUsdCo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VENTA_USD_CO");
            });

            modelBuilder.Entity<OrdenesAnulada>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Ordenes anuladas");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();
            });

            modelBuilder.Entity<OrdenesEnero2017>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OrdenesEnero2017");

                entity.Property(e => e.Basica).HasColumnName("BASICA");

                entity.Property(e => e.Categoria).HasMaxLength(255);

                entity.Property(e => e.Formas).HasColumnName("FORMAS");

                entity.Property(e => e.MillaresP).HasColumnName("MILLARES_P");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(255)
                    .HasColumnName("NOM_PRODUCTO");

                entity.Property(e => e.Opuesta).HasColumnName("OPUESTA");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Partes).HasColumnName("PARTES");

                entity.Property(e => e.Producto)
                    .HasMaxLength(255)
                    .HasColumnName("PRODUCTO");

                entity.Property(e => e.SubCategoria).HasMaxLength(255);
            });

            modelBuilder.Entity<OrdenesIcpp2016>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OrdenesICPP2016");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.BsVentas).HasColumnName("Bs Ventas");

                entity.Property(e => e.Categoria).HasMaxLength(255);

                entity.Property(e => e.ConsultorA)
                    .HasMaxLength(255)
                    .HasColumnName("Consultor(a)");

                entity.Property(e => e.Fiscal).HasMaxLength(255);

                entity.Property(e => e.FormsUnds).HasColumnName("Forms/Unds");

                entity.Property(e => e.MilCjPaq).HasColumnName("Mil/Cj/Paq");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(255)
                    .HasColumnName("Nombre Cliente");

                entity.Property(e => e.Oficina).HasMaxLength(255);

                entity.Property(e => e.PrecioUnit).HasColumnName("Precio Unit");

                entity.Property(e => e.Prod).HasMaxLength(255);

                entity.Property(e => e.SubCategoria).HasMaxLength(255);
            });

            modelBuilder.Entity<Ordenesespeciale>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ordenesespeciales");

                entity.HasIndex(e => e.Orden, "dep_OrdenesEspecialesorden");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");
            });

            modelBuilder.Entity<Ordenreporte>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ordenreporte");

                entity.Property(e => e.Orden)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("orden")
                    .IsFixedLength();

                entity.Property(e => e.Reporte)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("reporte")
                    .IsFixedLength();
            });

            modelBuilder.Entity<OtroMat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OtroMat");

                entity.Property(e => e.Cajcart).HasColumnName("CAJCART");

                entity.Property(e => e.CajcartDol).HasColumnName("CAJCART_Dol");

                entity.Property(e => e.Markupjobbing)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("markupjobbing");

                entity.Property(e => e.Otromat1).HasColumnName("OTROMAT");

                entity.Property(e => e.OtromatDol).HasColumnName("OTROMAT_Dol");

                entity.Property(e => e.Porcdesperdiciomc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PORCDESPERDICIOMC");

                entity.Property(e => e.Porcdesperdiciomcstock)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("PORCDESPERDICIOMCSTOCK");

                entity.Property(e => e.Rcajcart).HasColumnName("RCAJCART");

                entity.Property(e => e.Rotromat).HasColumnName("ROTROMAT");

                entity.Property(e => e.Rtinta).HasColumnName("RTINTA");

                entity.Property(e => e.Tinta).HasColumnName("TINTA");

                entity.Property(e => e.TintaDol).HasColumnName("TINTA_Dol");
            });

            modelBuilder.Entity<Preciopapelorden>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("preciopapelorden");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");
            });

            modelBuilder.Entity<QueryCuotasxventa>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_CUOTASXVENTAS");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Cobertura)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("COBERTURA");

                entity.Property(e => e.Cuota)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<QueryCuotasxventasm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_CUOTASXVENTASM");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Cobertura)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("COBERTURA");

                entity.Property(e => e.Cuota)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<QueryEstadist01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_ESTADIST_01");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.GerenteOficina)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Region)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REGION")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<QueryEstadistPe01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Query_Estadist_PE_01");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MillaresP)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Tasa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TituloPe)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_PE")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_DOL");
            });

            modelBuilder.Entity<QueryEstadistxasig01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_ESTADISTXASIG_01");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Asignacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Codigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FUltmCompra)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("F_Ultm_Compra");

                entity.Property(e => e.FlagInactivo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Flag_Inactivo")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NoRegTribut)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("No_Reg_Tribut")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Vendedor1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<QueryHistoricoAcumVentasAp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_HISTORICO_ACUM_VENTAS_AP");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<QueryNominaVentas01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_NOMINA_VENTAS_01");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO")
                    .IsFixedLength();

                entity.Property(e => e.ComisionVentas)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("COMISION_VENTAS");

                entity.Property(e => e.ConceptoPago)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CONCEPTO_PAGO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<QueryPostventa01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_POSTVENTA_01");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodOficina)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("COD_OFICINA");

                entity.Property(e => e.FechaCliente)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_CLIENTE");

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");
            });

            modelBuilder.Entity<QueryPostventa02>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_POSTVENTA_02");

                entity.Property(e => e.CodOficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("COD_OFICINA");

                entity.Property(e => e.Contactos).HasColumnName("CONTACTOS");

                entity.Property(e => e.Despacho).HasColumnName("DESPACHO");

                entity.Property(e => e.FechaCliente)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_CLIENTE");

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");
            });

            modelBuilder.Entity<QueryPostventa03>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_POSTVENTA_03", "VEMCYSICL");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodOficina)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("COD_OFICINA");

                entity.Property(e => e.FechaCliente)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_CLIENTE");

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO");
            });

            modelBuilder.Entity<QueryRelaclienteFact01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_RELACLIENTE_FACT_01");

                entity.Property(e => e.AnoFactura)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_FACTURA");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.ClienteNuevo).HasColumnName("CLIENTE_NUEVO");

                entity.Property(e => e.FApertura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("F_Apertura");

                entity.Property(e => e.Factura)
                    .HasColumnType("decimal(8, 0)")
                    .HasColumnName("FACTURA");

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.MesFactura)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_FACTURA");
            });

            modelBuilder.Entity<QueryTotalMcTp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QUERY_TOTAL_MC_TP");

                entity.Property(e => e.Bonomc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BONOMC");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();
            });

            modelBuilder.Entity<QueryVentasPrep>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Query_Ventas_PREP");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Variacion)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("VARIACION");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Rangomccium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rangomccia");

                entity.Property(e => e.Cia)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("cia");

                entity.Property(e => e.Desde)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("desde");

                entity.Property(e => e.Hasta)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("hasta");
            });

            modelBuilder.Entity<Rangoresma>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RANGORESMAS");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.CantOrdenes).HasColumnName("cant_ordenes");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Promedio)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("promedio");

                entity.Property(e => e.Rango)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("rango");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<Rangotitulo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RANGOTITULO");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.CantOrdenes).HasColumnName("cant_ordenes");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Promedio)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("promedio");

                entity.Property(e => e.Rango)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("rango");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<Rateplaca>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RATEPLACA");

                entity.Property(e => e.Kiloshasta)
                    .HasColumnType("numeric(18, 3)")
                    .HasColumnName("KILOSHASTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Rateplacakg)
                    .HasColumnType("numeric(18, 3)")
                    .HasColumnName("RATEPLACAKG");

                entity.Property(e => e.Rateplacaspot)
                    .HasColumnType("numeric(12, 3)")
                    .HasColumnName("RATEPLACASPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rateplacatintas)
                    .HasColumnType("numeric(18, 3)")
                    .HasColumnName("RATEPLACATINTAS");

                entity.Property(e => e.Ratetintaspot)
                    .HasColumnType("numeric(12, 3)")
                    .HasColumnName("RATETINTASPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rrateplacakg)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RRATEPLACAKG");

                entity.Property(e => e.Rrateplacaspot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RRATEPLACASPOT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rrateplacatintas)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RRATEPLACATINTAS");

                entity.Property(e => e.Rrratetintaspot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RRRATETINTASPOT")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Regione>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("REGIONES");

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REGION")
                    .IsFixedLength();

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.OverrideRegion)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("OVERRIDE_REGION");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");
            });

            modelBuilder.Entity<Relaclientefact>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RELACLIENTEFACT");

                entity.Property(e => e.AnoFactura)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_FACTURA");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Factura)
                    .HasColumnType("decimal(8, 0)")
                    .HasColumnName("FACTURA");

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.MesFactura)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_FACTURA");
            });

            modelBuilder.Entity<Reodene>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Reodenes");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Formas)
                    .HasColumnType("numeric(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.MesReorden)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NomSupervisor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Result>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.BsCarbon)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_CARBON");

                entity.Property(e => e.BsPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_PAPEL");

                entity.Property(e => e.BsSpot)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_SPOT");

                entity.Property(e => e.CodCarbon)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("COD_CARBON")
                    .IsFixedLength();

                entity.Property(e => e.CodPapel)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("COD_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.CostoCarbon)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COSTO_CARBON");

                entity.Property(e => e.CostoPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COSTO_PAPEL");

                entity.Property(e => e.CostoSpot)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("COSTO_SPOT");

                entity.Property(e => e.KgCarbon)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("KG_CARBON");

                entity.Property(e => e.KgPapel)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("KG_PAPEL");

                entity.Property(e => e.KgSpot)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("KG_SPOT");

                entity.Property(e => e.MedDec)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaPapel)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("MEDIDA_PAPEL");

                entity.Property(e => e.NoPartePapel)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("NO_PARTE_PAPEL");

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Parte)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTE");

                entity.Property(e => e.PesoPapel)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("PESO_PAPEL");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");
            });

            modelBuilder.Entity<ResumenDeVentasDelMe>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("RESUMEN DE VENTAS DEL MES");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.Clase)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("numeric(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.Region)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("REGION")
                    .IsFixedLength();

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<StatusOrdenWebSup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("STATUS_ORDEN_WEB_SUP");

                entity.Property(e => e.CodigoSuperv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_SUPERV")
                    .IsFixedLength();

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.DiasHabiles)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("DIAS_HABILES");

                entity.Property(e => e.Estacion1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ESTACION1")
                    .IsFixedLength();

                entity.Property(e => e.FechaPrometida)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FECHA_PROMETIDA")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDEN")
                    .IsFixedLength();

                entity.Property(e => e.StatusOrden)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("STATUS_ORDEN")
                    .IsFixedLength();
            });

            modelBuilder.Entity<StatusOrdenesI>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Status_Ordenes_IS");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<StatusOrdenesImpreso>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Status_Ordenes_Impresos");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.CodigoVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Entrega)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("ENTREGA");

                entity.Property(e => e.Factura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FACTURA");

                entity.Property(e => e.Grabada)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("GRABADA");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<StatusOrdenesStock>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Status_Ordenes_Stock");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.CodigoVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Entrega)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("ENTREGA");

                entity.Property(e => e.Factura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FACTURA");

                entity.Property(e => e.Grabada)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("GRABADA");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<SupervisorXMe>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Supervisor_x_mes");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Supervisore>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("SUPERVISORES");

                entity.Property(e => e.Activo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVO")
                    .IsFixedLength();

                entity.Property(e => e.Asignacion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ASIGNACION")
                    .IsFixedLength();

                entity.Property(e => e.Categoria)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORIA")
                    .IsFixedLength();

                entity.Property(e => e.ClaseVendedor)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLASE_VENDEDOR");

                entity.Property(e => e.Club300Asistid)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLUB300_ASISTID");

                entity.Property(e => e.Cobrador)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COBRADOR")
                    .IsFixedLength();

                entity.Property(e => e.CodDivision)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("COD_DIVISION");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoOverride)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CODIGO_OVERRIDE");

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionComprd)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_COMPRD");

                entity.Property(e => e.ComisionFactur)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMISION_FACTUR")
                    .IsFixedLength();

                entity.Property(e => e.ComisionImpres)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_IMPRES");

                entity.Property(e => e.ComisionOrden)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COMISION_ORDEN")
                    .IsFixedLength();

                entity.Property(e => e.ComisionServ)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_SERV");

                entity.Property(e => e.ComisionStock)
                    .HasColumnType("numeric(4, 2)")
                    .HasColumnName("COMISION_STOCK");

                entity.Property(e => e.CompanyBeeper)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("COMPANY_BEEPER");

                entity.Property(e => e.Consecutivo)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CONSECUTIVO");

                entity.Property(e => e.CotCorrelativo)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("COT_CORRELATIVO");

                entity.Property(e => e.EMail)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL")
                    .IsFixedLength();

                entity.Property(e => e.ExtTelefonica)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("EXT_TELEFONICA");

                entity.Property(e => e.FechaRetiro)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_RETIRO");

                entity.Property(e => e.Ficha)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FICHA")
                    .IsFixedLength();

                entity.Property(e => e.FlagCambio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_CAMBIO")
                    .IsFixedLength();

                entity.Property(e => e.FlagDeGerente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_DE_GERENTE")
                    .IsFixedLength();

                entity.Property(e => e.FlagReplicar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_REPLICAR")
                    .IsFixedLength();

                entity.Property(e => e.FlagRetirado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_RETIRADO")
                    .IsFixedLength();

                entity.Property(e => e.FlagSupervisor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Garantia)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GARANTIA")
                    .IsFixedLength();

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Grupo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("GRUPO");

                entity.Property(e => e.NombAbreviado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ABREVIADO")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NroDeClientes)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NRO_DE_CLIENTES");

                entity.Property(e => e.NroVendedor)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("NRO_VENDEDOR");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.OrdenRep)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ORDEN_REP");

                entity.Property(e => e.Ordenado)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("ORDENADO");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.Pais)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PAIS");

                entity.Property(e => e.Password)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("@PASSWORD")
                    .IsFixedLength();

                entity.Property(e => e.Pedido)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("PEDIDO");

                entity.Property(e => e.Posicion)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("POSICION");

                entity.Property(e => e.PuntosDelClub)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("PUNTOS_DEL_CLUB");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.TlfCelular)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TLF_CELULAR")
                    .IsFixedLength();

                entity.Property(e => e.UnidadBeeper)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("UNIDAD_BEEPER")
                    .IsFixedLength();

                entity.Property(e => e.Usuario)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO")
                    .IsFixedLength();
            });

            modelBuilder.Entity<SupervisoresEstadistico01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Supervisores_Estadistico_01");

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<TemporalLc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMPORAL_LC");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<TipoProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Tipo_Producto");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipo).HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<TituloVenta>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TITULO_VENTAS");

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();
            });

            modelBuilder.Entity<TotalCuotasGrupo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Total_Cuotas_Grupo");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Cuota)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("CUOTA");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");
            });

            modelBuilder.Entity<TotalOficina>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TOTAL_OFICINA");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Papel)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("PAPEL");

                entity.Property(e => e.Porcmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("PORCMC");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<TotalOrdenesPorProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TOTAL_ORDENES_POR_PRODUCTO");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();
            });

            modelBuilder.Entity<TotalOrdenesPorProducto1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TOTAL_ORDENES_POR_PRODUCTO_1");

                entity.Property(e => e.Expr2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");
            });

            modelBuilder.Entity<TotalOrdenesPorProducto2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TOTAL_ORDENES_POR_PRODUCTO_2");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Producto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();
            });

            modelBuilder.Entity<TotalRegion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("total_region");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Papel)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("PAPEL");

                entity.Property(e => e.Porcmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("PORCMC");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<TotalSup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TOTAL_SUP");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.Papel)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("PAPEL");

                entity.Property(e => e.Porcmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("PORCMC");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<TotalVariacionAp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Total_VariacionAP");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.TotalValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<TotalVariacionMpGrupo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Total_Variacion_MP_Grupo");

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<TotalVariacionP>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Total_VariacionP");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<TotalVend>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TOTAL_VEND");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Papel)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("PAPEL");

                entity.Property(e => e.Porcmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("PORCMC");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<TotalVendedorProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TOTAL_VENDEDOR_PRODUCTO");

                entity.Property(e => e.BsmcLista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_LISTA");

                entity.Property(e => e.BsmcVenta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_VENTA");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Parte).HasColumnName("PARTE");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<TotalVendedorProductoFm>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TOTAL_VENDEDOR_PRODUCTO_FM");

                entity.Property(e => e.BsmcLista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_LISTA");

                entity.Property(e => e.BsmcVenta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC_VENTA");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Fm)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("FM");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Parte).HasColumnName("PARTE");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<TotalVentasAcumAno>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TOTAL_VENTAS_ACUM_ANO");

                entity.Property(e => e.Abr)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("ABR");

                entity.Property(e => e.Ago)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("AGO");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Dic)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("DIC");

                entity.Property(e => e.Ene)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("ENE");

                entity.Property(e => e.Feb)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("FEB");

                entity.Property(e => e.Jul)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("JUL");

                entity.Property(e => e.Jun)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("JUN");

                entity.Property(e => e.Mar)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("MAR");

                entity.Property(e => e.May)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("MAY");

                entity.Property(e => e.Nov)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("NOV");

                entity.Property(e => e.Oct)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("OCT");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Sep)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("SEP");
            });

            modelBuilder.Entity<VAñoTituloTituloVenta>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑO_TITULO_TITULO_VENTAS");

                entity.Property(e => e.Año)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("AÑO");

                entity.Property(e => e.Menor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MENOR")
                    .IsFixedLength();

                entity.Property(e => e.Ventaacum)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTAACUM");
            });

            modelBuilder.Entity<VAñomesoficina>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESOFICINA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomesregion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESREGION");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomesregion4>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESREGION4");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomesregion4bk>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESREGION4BK");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomesregion4ventum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESREGION4VENTA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomesregionventum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESREGIONVENTA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomestipo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESTIPO");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomestipolinea>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESTIPOLINEA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Linea)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LINEA")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo_produ")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomestipolineafamiliaventum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESTIPOLINEAFAMILIAVENTA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Familia)
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.Linea)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LINEA")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo_produ")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomestipolineafamilium>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESTIPOLINEAFAMILIA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Familia)
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.Linea)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LINEA")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo_produ")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomestipolineaventum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESTIPOLINEAVENTA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Linea)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LINEA")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo_produ")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomestipoventum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESTIPOVENTA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Lista)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñomesup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOMESUP");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VAñotipolinea>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_AÑOTIPOLINEA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Familia)
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.Linea)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LINEA")
                    .IsFixedLength();

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tipo_produ")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VBacklog>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_Backlog");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.Cliente)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodProducto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nom_vendedor");

                entity.Property(e => e.Orden).HasColumnName("orden");

                entity.Property(e => e.Precioventa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("precioventa");

                entity.Property(e => e.Rprecioventa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("rprecioventa");

                entity.Property(e => e.RtotalVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTOTAL_VENTA");

                entity.Property(e => e.TotalVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TOTAL_VENTA");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VBonomcdetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_BONOMCDETALLE");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bono)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("bono");

                entity.Property(e => e.Bonoreal)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BONOREAL");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("conteo");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.Porcbonomc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("porcbonomc");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.Valor)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("valor");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VBonomcdetalle01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_BONOMCDETALLE_01");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bono)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("bono");

                entity.Property(e => e.Bonoreal)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BONOREAL");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("conteo");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.Porcbonomc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("porcbonomc");

                entity.Property(e => e.Valor)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("valor");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VBonomcporvendedorañome>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_BONOMCPORVENDEDORAÑOMES");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bono)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BONO");

                entity.Property(e => e.Bonoreal)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BONOREAL");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Mcxporcbono)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MCXPORCBONO");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Porcbonomc)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("porcbonomc");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VCantidadOrdene>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_CantidadOrdenes");

                entity.Property(e => e.CodigoVendedor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FechaArchivo)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ARCHIVO");

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NombreOficina)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Oficina)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");
            });

            modelBuilder.Entity<VDiccionarioestadistica>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_DICCIONARIOESTADISTICAS");

                entity.Property(e => e.Basededatos)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("basededatos");

                entity.Property(e => e.Field).HasMaxLength(128);

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Length).HasColumnName("length");

                entity.Property(e => e.MinorId).HasColumnName("minor_id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("name");

                entity.Property(e => e.TipoTabla)
                    .HasMaxLength(60)
                    .HasColumnName("tipo_tabla")
                    .UseCollation("Latin1_General_CI_AS_KS_WS");

                entity.Property(e => e.Type).HasMaxLength(128);

                entity.Property(e => e.Value)
                    .HasColumnType("sql_variant")
                    .HasColumnName("value");

                entity.Property(e => e.Xprec).HasColumnName("xprec");

                entity.Property(e => e.Xscale).HasColumnName("xscale");

                entity.Property(e => e.Xtype).HasColumnName("xtype");
            });

            modelBuilder.Entity<VInvetarioReconversion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_InvetarioReconversion");

                entity.Property(e => e.Basededatos)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("basededatos");

                entity.Property(e => e.Field).HasMaxLength(128);

                entity.Property(e => e.Length).HasColumnName("length");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("name");

                entity.Property(e => e.Type).HasMaxLength(128);

                entity.Property(e => e.Xprec).HasColumnName("xprec");

                entity.Property(e => e.Xscale).HasColumnName("xscale");
            });

            modelBuilder.Entity<VMcEmb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_MC_EMB$");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.Mc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("MC$");

                entity.Property(e => e.Mcreal)
                    .HasColumnType("numeric(35, 2)")
                    .HasColumnName("MCREAL");

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre_producto")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.OverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GENPA");

                entity.Property(e => e.OverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GN");

                entity.Property(e => e.POverrideGenpa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GENPA");

                entity.Property(e => e.POverrideGn)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Rango1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO1")
                    .IsFixedLength();

                entity.Property(e => e.Rango2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO2")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.TasaDolar)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("TASA_DOLAR");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Vl)
                    .HasColumnType("decimal(38, 7)")
                    .HasColumnName("VL$");

                entity.Property(e => e.Vlreal)
                    .HasColumnType("numeric(33, 4)")
                    .HasColumnName("VLREAL");

                entity.Property(e => e.Vv)
                    .HasColumnType("decimal(38, 7)")
                    .HasColumnName("VV$");

                entity.Property(e => e.Vvreal)
                    .HasColumnType("numeric(33, 4)")
                    .HasColumnName("VVREAL");

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VMcEmbarquesPorRangoHerbert>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_mc_Embarques_por_rango_herbert");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Rango2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO2")
                    .IsFixedLength();

                entity.Property(e => e.Titulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("titulo")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<VMcMixPorProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_MC_MIX_POR_PRODUCTO");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.PrintNoPrint)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("Print_NoPrint")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VMcemb1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_MCEMB");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.Mcsincom)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("MCSINCOM");

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre_producto")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.OverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GENPA");

                entity.Property(e => e.OverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GN");

                entity.Property(e => e.POverrideGenpa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GENPA");

                entity.Property(e => e.POverrideGn)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.Porciva)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PORCIVA");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.PrintNoPrint)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("Print_NoPrint")
                    .IsFixedLength();

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Rango1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO1")
                    .IsFixedLength();

                entity.Property(e => e.Rango2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO2")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.RbsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RBS_PLACA");

                entity.Property(e => e.RbsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBS_TT");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rbsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMCLISTA");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.RcostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RCOSTO_TT");

                entity.Property(e => e.Recnumauxiliar)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RECNUMAUXILIAR");

                entity.Property(e => e.RecordNumber)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Rimpuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("RIMPUESTO");

                entity.Property(e => e.Rmcsincom)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("RMCSINCOM");

                entity.Property(e => e.Roverger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RoverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GENPA");

                entity.Property(e => e.RoverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GN");

                entity.Property(e => e.RporcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_FINANSC");

                entity.Property(e => e.RporcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_PAPELSC");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.RtotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_CARBON");

                entity.Property(e => e.RtotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("RTOTAL_BS_PAPEL");

                entity.Property(e => e.RtotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_SPOT");

                entity.Property(e => e.Rtotalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALMATOTROS");

                entity.Property(e => e.Rtotalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALVARIABLE");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.Titulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("titulo")
                    .IsFixedLength();

                entity.Property(e => e.Titulo1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("titulo1")
                    .IsFixedLength();

                entity.Property(e => e.Titulo2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("titulo2")
                    .IsFixedLength();

                entity.Property(e => e.Titulo3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO3")
                    .IsFixedLength();

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("titulo_ventas")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VMcembGlobal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_mcemb_global");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.BsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("BS_PLACA");

                entity.Property(e => e.BsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BS_TT");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMCLISTA");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(38, 19)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.CostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("COSTO_TT");

                entity.Property(e => e.DescMunicipio)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.Docucanc)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUCANC");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaFactura)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_FACTURA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Impuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("IMPUESTO");

                entity.Property(e => e.Linea1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LINEA1")
                    .IsFixedLength();

                entity.Property(e => e.Materialesespeciales)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MATERIALESESPECIALES");

                entity.Property(e => e.Mcsincom)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("MCSINCOM");

                entity.Property(e => e.MedDec)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaBase)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_BASE");

                entity.Property(e => e.MedidaVariable)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("MEDIDA_VARIABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MetodoPrecio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("METODO_PRECIO")
                    .IsFixedLength();

                entity.Property(e => e.Millares)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES");

                entity.Property(e => e.Municipio)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO")
                    .IsFixedLength();

                entity.Property(e => e.NombreCliente)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_CLIENTE")
                    .IsFixedLength();

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre_linea")
                    .IsFixedLength();

                entity.Property(e => e.NombreMaestra)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("nombre_maestra")
                    .IsFixedLength();

                entity.Property(e => e.NombreOficina)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NombreProducto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre_producto")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreSup)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_SUP")
                    .IsFixedLength();

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.OverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GENPA");

                entity.Property(e => e.OverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("OVERRIDE_GN");

                entity.Property(e => e.POverrideGenpa)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GENPA");

                entity.Property(e => e.POverrideGn)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("P_OVERRIDE_GN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("PIES_TT");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.PorcOverger)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERGER");

                entity.Property(e => e.PorcOverride)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_OVERRIDE");

                entity.Property(e => e.Porciva)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PORCIVA");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.PrintNoPrint)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("Print_noPrint")
                    .IsFixedLength();

                entity.Property(e => e.ProcMclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PROC_MCLISTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Rango1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO1")
                    .IsFixedLength();

                entity.Property(e => e.Rango2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RANGO2")
                    .IsFixedLength();

                entity.Property(e => e.RangoConcesion).HasMaxLength(50);

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.RbsPlaca)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RBS_PLACA");

                entity.Property(e => e.RbsTt)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBS_TT");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rbsmclista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RBSMCLISTA");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.RcostoTt)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("RCOSTO_TT");

                entity.Property(e => e.Recnumauxiliar)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("RECNUMAUXILIAR");

                entity.Property(e => e.RecordNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Rimpuesto)
                    .HasColumnType("numeric(16, 4)")
                    .HasColumnName("RIMPUESTO");

                entity.Property(e => e.Rmcsincom)
                    .HasColumnType("numeric(38, 11)")
                    .HasColumnName("RMCSINCOM");

                entity.Property(e => e.Roverger)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RoverrideGenpa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GENPA");

                entity.Property(e => e.RoverrideGn)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("ROVERRIDE_GN");

                entity.Property(e => e.RporcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_FINANSC");

                entity.Property(e => e.RporcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("RPORC_MC_PAPELSC");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("numeric(12, 4)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.RtotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_CARBON");

                entity.Property(e => e.RtotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("RTOTAL_BS_PAPEL");

                entity.Property(e => e.RtotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTAL_BS_SPOT");

                entity.Property(e => e.Rtotalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALMATOTROS");

                entity.Property(e => e.Rtotalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTOTALVARIABLE");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.Signo)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("signo");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tipo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.Titulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("titulo")
                    .IsFixedLength();

                entity.Property(e => e.Titulo1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("titulo1")
                    .IsFixedLength();

                entity.Property(e => e.Titulo2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("titulo2")
                    .IsFixedLength();

                entity.Property(e => e.Titulo3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO3")
                    .IsFixedLength();

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("titulo_ventas")
                    .IsFixedLength();

                entity.Property(e => e.TotalBsCarbon)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_CARBON");

                entity.Property(e => e.TotalBsPapel)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("TOTAL_BS_PAPEL");

                entity.Property(e => e.TotalBsSpot)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_BS_SPOT");

                entity.Property(e => e.TotalKgCarbon)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_CARBON");

                entity.Property(e => e.TotalKgPapel)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_PAPEL");

                entity.Property(e => e.TotalKgSpot)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("TOTAL_KG_SPOT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Tracanc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRACANC")
                    .IsFixedLength();

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRANSACCION")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Zona)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VMcembSincomision>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_MCEMB_SINCOMISION");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bsmcsincomision)
                    .HasColumnType("numeric(22, 4)")
                    .HasColumnName("BSMCSINCOMISION");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PORC_MC");

                entity.Property(e => e.Porcmcsincomision)
                    .HasColumnType("numeric(38, 12)")
                    .HasColumnName("PORCMCSINCOMISION");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.Totalmatsincomision)
                    .HasColumnType("numeric(19, 2)")
                    .HasColumnName("TOTALMATSINCOMISION");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VOrdenesenestadisticosinfacturar>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ORDENESENESTADISTICOSINFACTURAR");

                entity.Property(e => e.Anulada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANULADA")
                    .IsFixedLength();

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Documento)
                    .HasColumnType("numeric(8, 0)")
                    .HasColumnName("DOCUMENTO");

                entity.Property(e => e.Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FlagRetenido)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_RETENIDO")
                    .IsFixedLength();

                entity.Property(e => e.JobId).HasColumnName("JOB_ID");

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VOrdenesespeciale>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ordenesespeciales");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");
            });

            modelBuilder.Entity<VRangomargenembarque>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_RANGOMARGENEMBARQUES");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bston)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("bston");

                entity.Property(e => e.CantOrdenes).HasColumnName("cant_ordenes");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Promedio)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("promedio");

                entity.Property(e => e.Rango)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("rango");

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VRangomargenembarquestitulo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_RANGOMARGENEMBARQUESTITULO");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bston)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("bston");

                entity.Property(e => e.CantOrdenes).HasColumnName("cant_ordenes");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Promedio)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("promedio");

                entity.Property(e => e.Rango)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("rango");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VRangomargenventa>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_RANGOMARGENVENTAS");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Bston)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("bston");

                entity.Property(e => e.CantOrdenes).HasColumnName("cant_ordenes");

                entity.Property(e => e.Conc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Lista)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Promedio)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("promedio");

                entity.Property(e => e.Rango)
                    .IsRequired()
                    .HasMaxLength(22)
                    .IsUnicode(false)
                    .HasColumnName("rango");

                entity.Property(e => e.Ton)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Venta)
                    .HasColumnType("decimal(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VTotalAñoMesProd>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_TOTAL_AÑO_MES_PROD");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Formas)
                    .HasColumnType("numeric(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Producto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Venta).HasColumnType("numeric(16, 2)");
            });

            modelBuilder.Entity<VTotalAñoMesTituloTituloVenta>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_TOTAL_AÑO_MES_TITULO_TITULO_VENTAS");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Titulo1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO1")
                    .IsFixedLength();

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VTotaltipoformula>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_TOTALTIPOFORMULA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Conc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("CONC");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.Mc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.Ton)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TON");

                entity.Property(e => e.Tonpapel)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TONPAPEL");

                entity.Property(e => e.Totalbscajascart).HasColumnName("TOTALBSCAJASCART");

                entity.Property(e => e.Totalbscarbon)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TOTALBSCARBON");

                entity.Property(e => e.Totalbsotrosmat).HasColumnName("TOTALBSOTROSMAT");

                entity.Property(e => e.Totalbspapel)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TOTALBSPAPEL");

                entity.Property(e => e.Totalbsspot)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TOTALBSSPOT");

                entity.Property(e => e.Totalbstintas).HasColumnName("TOTALBSTINTAS");

                entity.Property(e => e.Totalbstt)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TOTALBSTT");

                entity.Property(e => e.Totalmatotros)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TOTALMATOTROS");

                entity.Property(e => e.Totalvariable)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("TOTALVARIABLE");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VVenta>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_VENTAS");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Aplicacion)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.AuditoriaOrden)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AUDITORIA_ORDEN");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Canal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CANAL")
                    .IsFixedLength();

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCliente)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COD_CLIENTE");

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.CodigoProduct)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_PRODUCT")
                    .IsFixedLength();

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.CotizacionCorta)
                    .HasMaxLength(13)
                    .HasColumnName("COTIZACION_CORTA");

                entity.Property(e => e.CotizacionLarga)
                    .HasMaxLength(20)
                    .HasColumnName("COTIZACION_LARGA");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.GerenteOficina)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_OFICINA");

                entity.Property(e => e.Idsubcategoria)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("IDSUBCATEGORIA");

                entity.Property(e => e.Incoming)
                    .HasMaxLength(24)
                    .IsUnicode(false)
                    .HasColumnName("INCOMING");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaYFamilia)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_Y_FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION");

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VENDEDOR");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA");

                entity.Property(e => e.OficinaReferencia).HasColumnName("OFICINA_REFERENCIA");

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCons)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("Porc_Cons");

                entity.Property(e => e.PorcMc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Porc_MC");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PrecioVentareconvertido)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTAReconvertido");

                entity.Property(e => e.ProductoCuota)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO_CUOTA")
                    .IsFixedLength();

                entity.Property(e => e.ProductoMayor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO_MAYOR")
                    .IsFixedLength();

                entity.Property(e => e.ProductoMc)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO_MC")
                    .IsFixedLength();

                entity.Property(e => e.ProductoMcNew)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO_MC_NEW")
                    .IsFixedLength();

                entity.Property(e => e.Quater)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RangoPiesTotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIES_TOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Sm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SM")
                    .IsFixedLength();

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoProducto).HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.ValorVentareconvertido)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTAReconvertido");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");
            });

            modelBuilder.Entity<VVentasAñoMesVendedorCategoriaSubcategorium>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_VentasAñoMesVendedorCategoriaSubcategoria");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(38, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(38, 2)");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VVentasMe>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_VENTAS_MES");

                entity.Property(e => e.AloActual)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("ALO_ACTUAL")
                    .IsFixedLength();

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.AloControlMarketing).HasColumnName("ALO_CONTROL_MARKETING");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Añopronostico).HasColumnName("AÑOPRONOSTICO");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.CaducaInactiva).HasColumnName("CADUCA_INACTIVA");

                entity.Property(e => e.CantidadRetencionesIvaislr)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("CantidadRetencionesIVAISLR");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.ConstCqu)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstCQU");

                entity.Property(e => e.ConstMaxDso)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMaxDSO");

                entity.Property(e => e.ConstMaxPmc)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMaxPMC");

                entity.Property(e => e.ConstMaxSqu)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMaxSQU");

                entity.Property(e => e.ConstMinDso)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMinDSO");

                entity.Property(e => e.ConstMinPmc)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMinPMC");

                entity.Property(e => e.ConstMinSqu)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstMinSQU");

                entity.Property(e => e.ConstSobMaxPmc)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("ConstSobMaxPMC");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.CorreoContraloria).HasMaxLength(500);

                entity.Property(e => e.CorriendoComisiones)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CORRIENDO_COMISIONES")
                    .IsFixedLength();

                entity.Property(e => e.CorriendoPreciosJde)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CORRIENDO_PRECIOS_JDE")
                    .IsFixedLength();

                entity.Property(e => e.Corriendomcemb)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CORRIENDOMCEMB")
                    .IsFixedLength();

                entity.Property(e => e.Corriendomcvta)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CORRIENDOMCVTA")
                    .IsFixedLength();

                entity.Property(e => e.Corriendovtas)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CORRIENDOVTAS")
                    .IsFixedLength();

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.CotizacionCorta)
                    .HasMaxLength(13)
                    .HasColumnName("COTIZACION_CORTA");

                entity.Property(e => e.CotizacionLarga)
                    .HasMaxLength(20)
                    .HasColumnName("COTIZACION_LARGA");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.DiasPorVencerse).HasColumnName("DIAS_POR_VENCERSE");

                entity.Property(e => e.DiasValidez).HasColumnName("DIAS_VALIDEZ");

                entity.Property(e => e.DiasValidezGob).HasColumnName("DIAS_VALIDEZ_GOB");

                entity.Property(e => e.EmailDirector).HasMaxLength(200);

                entity.Property(e => e.EquipoActualizacion).HasMaxLength(100);

                entity.Property(e => e.Expr1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Expr2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Expr3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Expr4).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Expr5).HasColumnType("numeric(4, 0)");

                entity.Property(e => e.Expr6).HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Expr7).HasMaxLength(20);

                entity.Property(e => e.Expr8).HasMaxLength(13);

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaActualizacion).HasColumnType("datetime");

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaExistenciasStock)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_EXISTENCIAS_STOCK");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IndiceRnc)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("IndiceRNC");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesActual)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("MES_ACTUAL");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesControlMarketing).HasColumnName("MES_CONTROL_MARKETING");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MesesAtendido).HasColumnName("MESES_ATENDIDO");

                entity.Property(e => e.Mespronostico).HasColumnName("MESPRONOSTICO");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillarMinEtl)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("MillarMinETL");

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.MontoCotizacion)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MONTO_COTIZACION");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.NroCalculoComActual)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("NRO_CALCULO_COM_ACTUAL");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PondCqu)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PondCQU");

                entity.Property(e => e.PondDso)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PondDSO");

                entity.Property(e => e.PondPmc)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PondPMC");

                entity.Property(e => e.PondSmc)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PondSMC");

                entity.Property(e => e.PondSqu)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("PondSQU");

                entity.Property(e => e.PorcAlertCaduca1).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcAlertCaduca2).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcAlertCaduca3).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcLc)
                    .HasColumnType("decimal(4, 2)")
                    .HasColumnName("PORC_LC");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Porcbonomc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("porcbonomc");

                entity.Property(e => e.PorcentajeVolumenAdicional).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeVolumenCpo)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("PorcentajeVolumenCPO");

                entity.Property(e => e.PorcentajeVolumenCutSheets).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeVolumenEtiquetas).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeVolumenIc)
                    .HasColumnType("decimal(7, 2)")
                    .HasColumnName("PorcentajeVolumenIC");

                entity.Property(e => e.PorcentajeVolumenImpresos).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.PorcentajeVolumenOfficeProduct).HasColumnType("decimal(7, 2)");

                entity.Property(e => e.Porcmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORCMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.PrecioVentareconvertido)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTAReconvertido");

                entity.Property(e => e.ProcesandoExistencias)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.UsuarioActualizacion).HasMaxLength(40);

                entity.Property(e => e.ValidarRif)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.ValorVentareconvertido)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTAReconvertido");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.VentaMinEtl)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("VentaMinETL");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VVentasOrdenesespeciale>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ventas_ordenesespeciales");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Clase)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.CodigoProduct)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_PRODUCT")
                    .IsFixedLength();

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REGION")
                    .IsFixedLength();

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("numeric(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.LineaYFamilia)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_Y_FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MillaresP)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombAbreviado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_ABREVIADO")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.Renglon)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Tasa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.Titulo1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO1")
                    .IsFixedLength();

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_DOL");
            });

            modelBuilder.Entity<VVentasProductoMayor>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_VENTAS_PRODUCTO_MAYOR");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.BsMc)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("BS_MC");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombreVendedor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_VENDEDOR");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA");

                entity.Property(e => e.Ordenes)
                    .HasColumnType("decimal(38, 0)")
                    .HasColumnName("ORDENES");

                entity.Property(e => e.ProductoMayor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO_MAYOR")
                    .IsFixedLength();

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Vl)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("VL");

                entity.Property(e => e.VlDolares)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("VL_DOLARES");

                entity.Property(e => e.Vv)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("VV");

                entity.Property(e => e.VvDolares)
                    .HasColumnType("decimal(38, 2)")
                    .HasColumnName("VV_DOLARES");
            });

            modelBuilder.Entity<Valija>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("valija");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cotizacion")
                    .IsFixedLength();

                entity.Property(e => e.Fecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("fecha")
                    .IsFixedLength();

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("producto")
                    .IsFixedLength();

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("vendedor")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("venta")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VariacionMpGrupo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Variacion_MP_Grupo");

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<VendedorOficina>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Vendedor_Oficina");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO")
                    .IsFixedLength();

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_Oficina");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VendedorProducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VENDEDOR_PRODUCTO");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Concesion)
                    .HasMaxLength(38)
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .HasColumnName("nombre_linea");

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .HasColumnName("NOMBRE_VEND");

                entity.Property(e => e.Parte).HasColumnName("PARTE");

                entity.Property(e => e.PorcComision)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("PORC_COMISION");

                entity.Property(e => e.Porcmc)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("PORCMC");

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .HasColumnName("TIPO_PAPEL");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(14, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VendedorProductoPartesPapel>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VENDEDOR_PRODUCTO_PARTES_PAPEL");

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Fm)
                    .HasColumnType("numeric(38, 6)")
                    .HasColumnName("FM");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.NombreLinea)
                    .HasMaxLength(80)
                    .HasColumnName("nombre_linea");

                entity.Property(e => e.NombreVend)
                    .HasMaxLength(80)
                    .HasColumnName("NOMBRE_VEND");

                entity.Property(e => e.Parte).HasColumnName("PARTE");

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .HasColumnName("TIPO_PAPEL");

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 4)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VendedorVentasProductoMa>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Vendedor_Ventas_Producto_MA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VendedorVentasProductoMp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Vendedor_Ventas_Producto_MP");

                entity.Property(e => e.Activo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVO")
                    .IsFixedLength();

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.TituloPe)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_PE")
                    .IsFixedLength();

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VendedoresActivo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Vendedores_Activos");

                entity.Property(e => e.Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO")
                    .IsFixedLength();

                entity.Property(e => e.EMail)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL")
                    .IsFixedLength();

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VendedoresEstadistico01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Vendedores_Estadistico_01");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.CodVendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.EMail)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("E_MAIL")
                    .IsFixedLength();

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VendedoresXMe>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Vendedores_x_mes");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Venta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTAS");

                entity.HasIndex(e => e.CotizacionCorta, "COTIZACION_CORTAindex1");

                entity.HasIndex(e => new { e.Ano, e.Mes, e.Vendedor }, "IX_VENTAS")
                    .IsClustered()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.MesContable, e.Recnum }, "IX_VENTAS_1")
                    .HasFillFactor(70);

                entity.HasIndex(e => e.Cliente, "IX_VENTAS_10");

                entity.HasIndex(e => new { e.AloContable, e.MesContable, e.Vendedor, e.Categoria, e.SubCategoria }, "IX_VENTAS_2")
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.Orden, e.Producto, e.Correlativo }, "IX_VENTAS_3")
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.Categoria, e.SubCategoria }, "IX_VENTAS_4")
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.MesContable }, "IX_VENTAS_5")
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.MesContable, e.Vendedor, e.IdCuota }, "IX_VENTAS_6")
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.MesContable }, "IX_VENTAS_7")
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.Vendedor }, "IX_VENTAS_8");

                entity.HasIndex(e => new { e.AloContable, e.MesContable, e.Vendedor }, "IX_VENTAS_9");

                entity.HasIndex(e => new { e.Cotizacion, e.Orden, e.Correlativo, e.Renglon, e.Recnum }, "VENTAS_INDEX04")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.HasIndex(e => e.Orden, "dep_Ventasorden");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE")
                    .HasComment("Año Contable");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE")
                    .HasComment("Codigo de Cliente");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago)
                    .HasColumnName("CONDPAGO")
                    .HasComment("Condicion de Pago");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .HasComment("Cotizacion");

                entity.Property(e => e.CotizacionCorta)
                    .HasMaxLength(13)
                    .HasColumnName("COTIZACION_CORTA");

                entity.Property(e => e.CotizacionLarga)
                    .HasMaxLength(20)
                    .HasColumnName("COTIZACION_LARGA");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE")
                    .HasComment("Mes Contable");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength()
                    .HasComment("Nombre de Oficina");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN")
                    .HasComment("Numero de Orden");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN")
                    .HasDefaultValueSql("((0))")
                    .HasComment("Porcentaje de MC Financiero");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA")
                    .HasComment("Precio de Venta Unitario");

                entity.Property(e => e.PrecioVentareconvertido)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTAReconvertido")
                    .HasComment("Precio de Venta Unitario");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength()
                    .HasComment("Codigo de Producto");

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Recnum)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength()
                    .HasComment("Codigo de Supervisor");

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA")
                    .HasComment("Total Lista");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA")
                    .HasComment("Total Venta");

                entity.Property(e => e.ValorVentareconvertido)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTAReconvertido")
                    .HasComment("Total Venta");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength()
                    .HasComment("Codigo de Vendedor");

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventas1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTAS1");

                entity.HasIndex(e => e.Orden, "dep_Ventas1orden");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.Porcmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORCMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiesTotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIES_TOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VentasA>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTAS_A");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.Clase)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("numeric(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tasa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.Temp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEMP")
                    .IsFixedLength();

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VentasAnoActual>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VENTAS_ANO_ACTUAL");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CantOrdenes)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CANT_ORDENES");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VentasHistoricoAcumGrupoAp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Ventas_Historico_Acum_Grupo_AP");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CantOrdenes)
                    .HasColumnType("numeric(38, 0)")
                    .HasColumnName("CANT_ORDENES");

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VALOR_VENTA");
            });

            modelBuilder.Entity<VentasHistoricoAcumulado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTAS_HISTORICO_ACUMULADO");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CantidadOrdenes)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("CANTIDAD_ORDENES");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.TotalValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_VALOR_LISTA");

                entity.Property(e => e.TotalValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TOTAL_VALOR_VENTA");

                entity.Property(e => e.Variacion)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VARIACION");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VentasMesPrevio>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VENTAS_MES_PREVIO");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Venta)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTA");
            });

            modelBuilder.Entity<VentasPorRegion>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VENTAS POR REGION");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Lista)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("LISTA");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Ventas)
                    .HasColumnType("numeric(38, 2)")
                    .HasColumnName("VENTAS");
            });

            modelBuilder.Entity<VentasProductoRep>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTAS_PRODUCTO_REP");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.CodigoGrupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.DescMes)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DESC_MES")
                    .IsFixedLength();

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.TituloVentas)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TITULO_VENTAS")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Variacion)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("VARIACION");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasa1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASA");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasconordenes2000>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASconordenes2000");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasf>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ventasf");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.Bsmc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Clase)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Concesion)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("numeric(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.Porcmc)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("PORCMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoProducto)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("TIPO_PRODUCTO");

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasin>(entity =>
            {
                entity.HasKey(e => new { e.Orden, e.Correlativo, e.Renglon })
                    .HasName("VENTASIN_INDEX01");

                entity.ToTable("VENTASIN");

                entity.HasIndex(e => e.Recnum, "VENTASIN_INDEX00")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.Cliente, e.Orden, e.Correlativo, e.Renglon }, "VENTASIN_INDEX02")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.Vendedor, e.Orden, e.Correlativo, e.Renglon }, "VENTASIN_INDEX03")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.Cotizacion, e.Orden, e.Correlativo, e.Renglon }, "VENTASIN_INDEX04")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.MesContable, e.Orden, e.Recnum }, "VENTASIN_INDEX05")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.FechaIngreso, e.Recnum }, "VENTASIN_INDEX06")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.Orden, e.Producto, e.Recnum }, "VENTASIN_INDEX07")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.AloContable, e.MesContable, e.Recnum }, "VENTASIN_INDEX08")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.HasIndex(e => new { e.Ano, e.Mes, e.Orden, e.Recnum }, "VENTASIN_INDEX09")
                    .IsUnique()
                    .HasFillFactor(70);

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Correlativo).HasColumnName("CORRELATIVO");

                entity.Property(e => e.Renglon).HasColumnName("RENGLON");

                entity.Property(e => e.AloContable).HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano).HasColumnName("ANO");

                entity.Property(e => e.AnoReorden).HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Clase).HasColumnName("CLASE");

                entity.Property(e => e.Cliente).HasColumnName("CLIENTE");

                entity.Property(e => e.CodPro)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Codcorp)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Codmos)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodproRpg)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.Conteo).HasColumnName("CONTEO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Familia)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO")
                    .HasDefaultValueSql("('01/01/1753')");

                entity.Property(e => e.Fiscal)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Flag)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Formas).HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.LineaProduc)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Mes).HasColumnName("MES");

                entity.Property(e => e.MesContable).HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden).HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.NomProducto)
                    .IsRequired()
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NomVendedor)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NombOfic)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NombreDeForma)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NotaCambio).HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes).HasColumnName("PARTES");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Recnum)
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Supervisor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.Temp)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("TEMP")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Territorio)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TipoPapel)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TipoProdu)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TipoVend)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.ZonaVta)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<Ventasm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASM");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE")
                    .HasComment("Año Contable");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE")
                    .HasComment("Codigo de Cliente");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago)
                    .HasColumnName("CONDPAGO")
                    .HasComment("Condicion de Pago");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .HasComment("Cotizacion");

                entity.Property(e => e.CotizacionCorta)
                    .HasMaxLength(13)
                    .HasColumnName("COTIZACION_CORTA");

                entity.Property(e => e.CotizacionLarga)
                    .HasMaxLength(20)
                    .HasColumnName("COTIZACION_LARGA");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE")
                    .HasComment("Mes Contable");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength()
                    .HasComment("Nombre de Oficina");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN")
                    .HasComment("Numero de Orden");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN")
                    .HasDefaultValueSql("((0))")
                    .HasComment("Porcentaje de MC Financiero");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA")
                    .HasComment("Precio de Venta Unitario");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength()
                    .HasComment("Codigo de Producto");

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Recnum)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength()
                    .HasComment("Codigo de Supervisor");

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("USDMC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA")
                    .HasComment("Total Lista");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA")
                    .HasComment("Total Venta");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength()
                    .HasComment("Codigo de Vendedor");

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasm012023>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASM012023");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasm02022022>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASM02022022");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasm02122021>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASM02122021");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasm08012022>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASM08012022");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasm12012022>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASM12012022");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VentasmRezagada>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASM Rezagadas");

                entity.Property(e => e.AloContable)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.Clase)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Conteo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION")
                    .IsFixedLength();

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("numeric(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("numeric(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Partes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tasa)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.Temp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TEMP")
                    .IsFixedLength();

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasmal01112022>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASMal01112022");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasmal10032022>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASMal10032022");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasmal12012022>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASMal12012022");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasmcopium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASMcopia");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaDolRef)
                    .HasColumnType("datetime")
                    .HasColumnName("Fecha_dol_ref");

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.IdSolicitud).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.KilosOrden).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.L03calComision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("L03CAL_COMISION");

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesCuadrado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesLineales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PiesTotales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PiesVenta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioUnitarioUsd).HasColumnType("numeric(20, 4)");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RtasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTasa_Dol_Ref");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.TasaDolRef)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("Tasa_Dol_Ref");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.Usdmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("USDMC");

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.VentaDolRef)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("Venta_Dol_Ref");

                entity.Property(e => e.X10calPvjusto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("X10CAL_PVJUSTO");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasmodifcacionnombre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTASmodifcacionnombre");

                entity.Property(e => e.AloContable)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ALO_CONTABLE");

                entity.Property(e => e.Ano)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Basica)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("BASICA")
                    .IsFixedLength();

                entity.Property(e => e.BsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN");

                entity.Property(e => e.BsMcFinanEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINAN_EMB");

                entity.Property(e => e.BsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC");

                entity.Property(e => e.BsMcFinanscEmb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_FINANSC_EMB");

                entity.Property(e => e.BsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPEL");

                entity.Property(e => e.BsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_MC_PAPELSC");

                entity.Property(e => e.Bsmc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("BSMC");

                entity.Property(e => e.Categoria).HasMaxLength(50);

                entity.Property(e => e.Clase)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CLASE");

                entity.Property(e => e.Cliente)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.CodCic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_CIC");

                entity.Property(e => e.CodGic)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GIC");

                entity.Property(e => e.CodGo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GO");

                entity.Property(e => e.CodGop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GOP");

                entity.Property(e => e.CodGr)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_GR");

                entity.Property(e => e.CodOficina).HasColumnName("COD_OFICINA");

                entity.Property(e => e.CodPro)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_PRO")
                    .IsFixedLength();

                entity.Property(e => e.CodTeleop)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("COD_TELEOP")
                    .IsFixedLength();

                entity.Property(e => e.Codcorp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CODCORP")
                    .IsFixedLength();

                entity.Property(e => e.Codmos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODMOS")
                    .IsFixedLength();

                entity.Property(e => e.CodproRpg)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CODPRO_RPG")
                    .IsFixedLength();

                entity.Property(e => e.Comision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("COMISION");

                entity.Property(e => e.ComisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_CIC");

                entity.Property(e => e.ComisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GIC");

                entity.Property(e => e.ComisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GO");

                entity.Property(e => e.ComisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COMISION_GOP");

                entity.Property(e => e.Concesion)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("CONCESION");

                entity.Property(e => e.Condpago).HasColumnName("CONDPAGO");

                entity.Property(e => e.Conteo)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("CONTEO");

                entity.Property(e => e.Correlativo)
                    .HasColumnType("decimal(3, 0)")
                    .HasColumnName("CORRELATIVO");

                entity.Property(e => e.Cotizacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COTIZACION");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.Familia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FAMILIA")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Fiscal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FISCAL")
                    .IsFixedLength();

                entity.Property(e => e.Flag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FLAG")
                    .IsFixedLength();

                entity.Property(e => e.Formas)
                    .HasColumnType("decimal(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.Grupo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GRUPO")
                    .IsFixedLength();

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.ListaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("LISTA_DOL");

                entity.Property(e => e.ManualAuto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MANUAL_AUTO")
                    .IsFixedLength();

                entity.Property(e => e.Mes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.MesContable)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_CONTABLE");

                entity.Property(e => e.MesReorden)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.MetodoLista)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("METODO_LISTA")
                    .IsFixedLength();

                entity.Property(e => e.MillaresP)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("MILLARES_P");

                entity.Property(e => e.Nocalculamc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NOCALCULAMC");

                entity.Property(e => e.NomProducto)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NOM_PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.NombOfic)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOMB_OFIC")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.NotaCambio)
                    .HasColumnType("decimal(6, 0)")
                    .HasColumnName("NOTA_CAMBIO");

                entity.Property(e => e.Opuesta)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("OPUESTA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Overger)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERGER");

                entity.Property(e => e.Override)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("OVERRIDE");

                entity.Property(e => e.PComision)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_COMISION");

                entity.Property(e => e.POverger)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("P_OVERGER");

                entity.Property(e => e.POverride)
                    .HasColumnType("decimal(14, 2)")
                    .HasColumnName("P_OVERRIDE");

                entity.Property(e => e.Partes)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("PARTES");

                entity.Property(e => e.PiesTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PIES_TOTAL");

                entity.Property(e => e.PorcCic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_CIC");

                entity.Property(e => e.PorcGic)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GIC");

                entity.Property(e => e.PorcGo)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GO");

                entity.Property(e => e.PorcGop)
                    .HasColumnType("decimal(8, 2)")
                    .HasColumnName("PORC_GOP");

                entity.Property(e => e.PorcMcFinan)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN");

                entity.Property(e => e.PorcMcFinanEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINAN_EMB");

                entity.Property(e => e.PorcMcFinansc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC");

                entity.Property(e => e.PorcMcFinanscEmb)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_FINANSC_EMB");

                entity.Property(e => e.PorcMcPapel)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPEL");

                entity.Property(e => e.PorcMcPapelsc)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PORC_MC_PAPELSC");

                entity.Property(e => e.Pormc)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PORMC");

                entity.Property(e => e.PrecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_LISTA");

                entity.Property(e => e.PrecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRECIO_VENTA");

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCTO")
                    .IsFixedLength();

                entity.Property(e => e.RangoPiestotal)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGO_PIESTOTAL")
                    .IsFixedLength();

                entity.Property(e => e.Rangoaltomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOALTOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.Rangobajomargen)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RANGOBAJOMARGEN")
                    .IsFixedLength();

                entity.Property(e => e.RbsMcFinan)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINAN");

                entity.Property(e => e.RbsMcFinansc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_FINANSC");

                entity.Property(e => e.RbsMcPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPEL");

                entity.Property(e => e.RbsMcPapelsc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_MC_PAPELSC");

                entity.Property(e => e.Rbsmc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBSMC");

                entity.Property(e => e.Rcomision)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION");

                entity.Property(e => e.RcomisionCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_CIC");

                entity.Property(e => e.RcomisionGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GIC");

                entity.Property(e => e.RcomisionGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GO");

                entity.Property(e => e.RcomisionGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOMISION_GOP");

                entity.Property(e => e.Recnum).HasColumnName("RECNUM");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Renglon)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("RENGLON");

                entity.Property(e => e.Roverger)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERGER");

                entity.Property(e => e.Roverride)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("ROVERRIDE");

                entity.Property(e => e.RprecioLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_LISTA");

                entity.Property(e => e.RprecioVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RPRECIO_VENTA");

                entity.Property(e => e.RsdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_CIC");

                entity.Property(e => e.RsdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GIC");

                entity.Property(e => e.RsdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GO");

                entity.Property(e => e.RsdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GOP");

                entity.Property(e => e.RsdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_GR");

                entity.Property(e => e.RsdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_TL");

                entity.Property(e => e.RsdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RSDF_V");

                entity.Property(e => e.Rtasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RTASA");

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.SdfCic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_CIC");

                entity.Property(e => e.SdfGic)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GIC");

                entity.Property(e => e.SdfGo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GO");

                entity.Property(e => e.SdfGop)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GOP");

                entity.Property(e => e.SdfGr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_GR");

                entity.Property(e => e.SdfTl)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_TL");

                entity.Property(e => e.SdfV)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("SDF_V");

                entity.Property(e => e.SubCategoria).HasMaxLength(50);

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.Tabla)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("TABLA");

                entity.Property(e => e.Tasa)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("TASA");

                entity.Property(e => e.Territorio)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TERRITORIO")
                    .IsFixedLength();

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.TipoProdu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PRODU")
                    .IsFixedLength();

                entity.Property(e => e.TipoVend)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_VEND")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.VentaDol)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VENTA_DOL");

                entity.Property(e => e.ZonaVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ZONA_VTA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ventasporproducto>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ventasporproducto");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.LineaProduc)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("LINEA_PRODUC")
                    .IsFixedLength();

                entity.Property(e => e.Lista).HasColumnType("numeric(38, 2)");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.Ventas).HasColumnType("numeric(38, 2)");
            });

            modelBuilder.Entity<VerReordene>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ver_Reordenes");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Formas)
                    .HasColumnType("numeric(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.MesReorden)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NomSupervisor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.RvalorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RVALOR_LISTA");

                entity.Property(e => e.RvalorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("RVALOR_VENTA");

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<VerReordenesView>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Ver_Reordenes_view");

                entity.Property(e => e.AnoReorden)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO_REORDEN");

                entity.Property(e => e.Cliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("CLIENTE");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPCION")
                    .IsFixedLength();

                entity.Property(e => e.FechaIngreso)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_INGRESO");

                entity.Property(e => e.FechaReorden)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_REORDEN");

                entity.Property(e => e.Formas)
                    .HasColumnType("numeric(14, 0)")
                    .HasColumnName("FORMAS");

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.MesReorden)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES_REORDEN");

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.NomSupervisor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.NomVendedor)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("NOM_VENDEDOR")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE")
                    .IsFixedLength();

                entity.Property(e => e.NombreDeForma)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_DE_FORMA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.RegionVta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REGION_VTA")
                    .IsFixedLength();

                entity.Property(e => e.Supervisor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUPERVISOR")
                    .IsFixedLength();

                entity.Property(e => e.TipoPapel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO_PAPEL")
                    .IsFixedLength();

                entity.Property(e => e.ValorLista)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("VALOR_LISTA");

                entity.Property(e => e.ValorVenta)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("VALOR_VENTA");

                entity.Property(e => e.Vendedor)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VENDEDOR")
                    .IsFixedLength();
            });

            modelBuilder.Entity<View1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VIEW1");

                entity.Property(e => e.CodCliente)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("COD_CLIENTE");

                entity.Property(e => e.Expr1).HasColumnType("numeric(10, 0)");

                entity.Property(e => e.Expr2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FechaCliente)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_CLIENTE");

                entity.Property(e => e.FechaEncuesta)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ENCUESTA");

                entity.Property(e => e.FechaEntrega)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("FECHA_ENTREGA");

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");
            });

            modelBuilder.Entity<Winy030>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("winy030");

                entity.Property(e => e.Cambio)
                    .HasColumnType("numeric(12, 2)")
                    .HasColumnName("CAMBIO");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");
            });

            modelBuilder.Entity<Wmcs001>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WMCS001");

                entity.HasIndex(e => new { e.Producto, e.Ctainv }, "IX_WMCS001")
                    .IsUnique();

                entity.Property(e => e.Cant)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("cant")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Ctainv)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ctainv")
                    .IsFixedLength();

                entity.Property(e => e.Producto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("producto")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wpry062>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("WPRY062");

                entity.Property(e => e.Ano)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("ANO");

                entity.Property(e => e.CodAnulacion)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("COD_ANULACION");

                entity.Property(e => e.FechaAct)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ACT");

                entity.Property(e => e.FechaAnulacion)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ANULACION");

                entity.Property(e => e.Mes)
                    .HasColumnType("numeric(2, 0)")
                    .HasColumnName("MES");

                entity.Property(e => e.NroAnulacion)
                    .HasColumnType("numeric(6, 0)")
                    .HasColumnName("NRO_ANULACION");

                entity.Property(e => e.Observacion1)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION1")
                    .IsFixedLength();

                entity.Property(e => e.Observacion2)
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnName("OBSERVACION2")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.Persona)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PERSONA")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TIPO")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wpry090>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("wpry090");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("numeric(14, 0)")
                    .HasColumnName("CANTIDAD");

                entity.Property(e => e.FechaAjustada)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_AJUSTADA");

                entity.Property(e => e.FechaOrden)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_ORDEN");

                entity.Property(e => e.FechaRenegocia)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_RENEGOCIA");

                entity.Property(e => e.ListaDolActua)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_DOL_ACTUA");

                entity.Property(e => e.ListaDolaresR)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_DOLARES_R");

                entity.Property(e => e.ListaUniActua)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_UNI_ACTUA");

                entity.Property(e => e.ListaUniReneg)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("LISTA_UNI_RENEG");

                entity.Property(e => e.Oficina)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.Orden)
                    .HasColumnType("numeric(10, 0)")
                    .HasColumnName("ORDEN");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.TasaActual)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("TASA_ACTUAL");

                entity.Property(e => e.TasaRenegocia)
                    .HasColumnType("numeric(6, 2)")
                    .HasColumnName("TASA_RENEGOCIA");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USUARIO")
                    .IsFixedLength();

                entity.Property(e => e.VentaDolActua)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_DOL_ACTUA");

                entity.Property(e => e.VentaDolaresR)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_DOLARES_R");

                entity.Property(e => e.VentaUniActua)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_UNI_ACTUA");

                entity.Property(e => e.VentaUniReneg)
                    .HasColumnType("numeric(16, 2)")
                    .HasColumnName("VENTA_UNI_RENEG");
            });

            modelBuilder.Entity<Wsmy021>(entity =>
            {
                entity.HasKey(e => e.Recnum)
                    .HasName("WSMY021_INDEX00");

                entity.ToTable("WSMY021");

                entity.Property(e => e.Recnum)
                    .HasColumnType("decimal(28, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RECNUM");

                entity.Property(e => e.BsCarbon)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_CARBON");

                entity.Property(e => e.BsPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_PAPEL");

                entity.Property(e => e.BsSpot)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("BS_SPOT");

                entity.Property(e => e.CodCarbon)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("COD_CARBON")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodPapel)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("COD_PAPEL")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CostoCarbon)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COSTO_CARBON");

                entity.Property(e => e.CostoPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("COSTO_PAPEL");

                entity.Property(e => e.CostoSpot)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("COSTO_SPOT");

                entity.Property(e => e.KgCarbon)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("KG_CARBON");

                entity.Property(e => e.KgPapel)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("KG_PAPEL");

                entity.Property(e => e.KgSpot)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("KG_SPOT");

                entity.Property(e => e.MedDec).HasColumnName("MED_DEC");

                entity.Property(e => e.MedEnt).HasColumnName("MED_ENT");

                entity.Property(e => e.MedNum).HasColumnName("MED_NUM");

                entity.Property(e => e.MedidaPapel).HasColumnName("MEDIDA_PAPEL");

                entity.Property(e => e.NoPartePapel).HasColumnName("NO_PARTE_PAPEL");

                entity.Property(e => e.Orden).HasColumnName("ORDEN");

                entity.Property(e => e.Parte).HasColumnName("PARTE");

                entity.Property(e => e.PesoPapel).HasColumnName("PESO_PAPEL");

                entity.Property(e => e.RbsCarbon)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_CARBON")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RbsSpot)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RBS_SPOT")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcostoCarbon)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOSTO_CARBON")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcostoPapel)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("RCOSTO_PAPEL")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.RcostoSpot)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("RCOSTO_SPOT")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<Wsmy123>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("wsmy123");

                entity.Property(e => e.CodOficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COD_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.CodigoParroq)
                    .HasColumnType("numeric(4, 0)")
                    .HasColumnName("CODIGO_PARROQ");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION")
                    .IsFixedLength();

                entity.Property(e => e.Direccion1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION1")
                    .IsFixedLength();

                entity.Property(e => e.NomOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOM_OFICINA")
                    .IsFixedLength();

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");

                entity.Property(e => e.TelfOficina)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TELF_OFICINA")
                    .IsFixedLength();
            });

            modelBuilder.Entity<Wssy030>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("WSSY030");

                entity.Property(e => e.CodigoRegion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CODIGO_REGION")
                    .IsFixedLength();

                entity.Property(e => e.GerenteRegion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("GERENTE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.NombreRegion)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRE_REGION")
                    .IsFixedLength();

                entity.Property(e => e.OverrideRegion)
                    .HasColumnType("numeric(14, 2)")
                    .HasColumnName("OVERRIDE_REGION");

                entity.Property(e => e.RecordNumber).HasColumnName("RECORD_NUMBER");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
